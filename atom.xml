<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gaofang Huang</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huanggaofang.com/"/>
  <updated>2021-07-21T08:27:06.126Z</updated>
  <id>https://huanggaofang.com/</id>
  
  <author>
    <name>Gaofang Huang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS 样式</title>
    <link href="https://huanggaofang.com/frontend/base/css-style/"/>
    <id>https://huanggaofang.com/frontend/base/css-style/</id>
    <published>2021-07-21T08:26:00.000Z</published>
    <updated>2021-07-21T08:27:06.126Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="待填坑" scheme="https://huanggaofang.com/tags/%E5%BE%85%E5%A1%AB%E5%9D%91/"/>
    
      <category term="CSS" scheme="https://huanggaofang.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>浏览器</title>
    <link href="https://huanggaofang.com/frontend/base/browser/"/>
    <id>https://huanggaofang.com/frontend/base/browser/</id>
    <published>2021-07-21T08:06:00.000Z</published>
    <updated>2021-07-21T08:06:16.992Z</updated>
    
    <content type="html"><![CDATA[<p>11</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;11&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="浏览器" scheme="https://huanggaofang.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Blender 入门</title>
    <link href="https://huanggaofang.com/design/Blender/"/>
    <id>https://huanggaofang.com/design/Blender/</id>
    <published>2021-07-21T08:00:00.000Z</published>
    <updated>2021-07-21T08:04:18.913Z</updated>
    
    <content type="html"><![CDATA[<p>to be continue…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;to be continue…&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="视觉设计笔记" scheme="https://huanggaofang.com/categories/%E8%A7%86%E8%A7%89%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Blender" scheme="https://huanggaofang.com/tags/Blender/"/>
    
      <category term="建模" scheme="https://huanggaofang.com/tags/%E5%BB%BA%E6%A8%A1/"/>
    
      <category term="3D" scheme="https://huanggaofang.com/tags/3D/"/>
    
  </entry>
  
  <entry>
    <title>Ionic 从 0 到打包</title>
    <link href="https://huanggaofang.com/frontend/ui/ionic/"/>
    <id>https://huanggaofang.com/frontend/ui/ionic/</id>
    <published>2021-07-20T08:05:00.000Z</published>
    <updated>2021-07-21T07:13:52.232Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用官方组件"><a href="#常用官方组件" class="headerlink" title="常用官方组件"></a>常用官方组件</h3><a id="more"></a><h3 id="自定义-TabBar"><a href="#自定义-TabBar" class="headerlink" title="自定义 TabBar"></a>自定义 TabBar</h3><h3 id="自定义组件"><a href="#自定义组件" class="headerlink" title="自定义组件"></a>自定义组件</h3><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><h3 id="数据请求"><a href="#数据请求" class="headerlink" title="数据请求"></a>数据请求</h3><h3 id="平台联动"><a href="#平台联动" class="headerlink" title="平台联动"></a>平台联动</h3><h4 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a>微信支付</h4><h4 id="支付宝"><a href="#支付宝" class="headerlink" title="支付宝"></a>支付宝</h4><h4 id="微信登录与分享"><a href="#微信登录与分享" class="headerlink" title="微信登录与分享"></a>微信登录与分享</h4><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><h4 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h4><h4 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h4>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常用官方组件&quot;&gt;&lt;a href=&quot;#常用官方组件&quot; class=&quot;headerlink&quot; title=&quot;常用官方组件&quot;&gt;&lt;/a&gt;常用官方组件&lt;/h3&gt;
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="待填坑" scheme="https://huanggaofang.com/tags/%E5%BE%85%E5%A1%AB%E5%9D%91/"/>
    
      <category term="Javascript" scheme="https://huanggaofang.com/tags/Javascript/"/>
    
      <category term="Angular" scheme="https://huanggaofang.com/tags/Angular/"/>
    
      <category term="Ionic" scheme="https://huanggaofang.com/tags/Ionic/"/>
    
  </entry>
  
  <entry>
    <title>React 基础</title>
    <link href="https://huanggaofang.com/frontend/frame/react/"/>
    <id>https://huanggaofang.com/frontend/frame/react/</id>
    <published>2021-05-11T08:19:00.000Z</published>
    <updated>2021-07-21T07:12:16.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h2 id="HOOK"><a href="#HOOK" class="headerlink" title="HOOK"></a>HOOK</h2><h2 id="React-Native"><a href="#React-Native" class="headerlink" title="React Native"></a>React Native</h2><h2 id="EXPO"><a href="#EXPO" class="headerlink" title="EXPO"></a>EXPO</h2><h3 id="把-iconfont-导入到-react-native-expo-中"><a href="#把-iconfont-导入到-react-native-expo-中" class="headerlink" title="把 iconfont 导入到 react-native expo 中"></a>把 iconfont 导入到 react-native expo 中</h3><p>查看 <a href="https://www.cnblogs.com/unclefang/p/13857824.html" target="_blank" rel="noopener">在 react native expo 中使用 iconfont 自定义图标</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;&lt;h2 id=&quot;HOOK&quot;&gt;&lt;a href=&quot;#HOOK&quot; class=&quot;headerlink&quot; title=&quot;HOOK&quot;&gt;&lt;/a&gt;HOOK&lt;/h
      
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="https://huanggaofang.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Web安全解决方案</title>
    <link href="https://huanggaofang.com/frontend/flow/web-safety/"/>
    <id>https://huanggaofang.com/frontend/flow/web-safety/</id>
    <published>2021-05-11T02:00:00.000Z</published>
    <updated>2021-07-21T07:18:13.690Z</updated>
    
    <content type="html"><![CDATA[<p><strong>常见的攻击类型</strong>：XSS 攻击、CSRF 攻击、SQL 注入、点击劫持、URL 跳转漏洞、OS 命令注入攻击。</p><p>浏览器安全其实是受<em>同源策略</em>（同域名、同端口、同协议名）保护的，但是<code>&lt;script&gt;</code>、<code>&lt;img&gt;</code>、<code>&lt;iframe&gt;</code>、<code>&lt;link&gt;</code>等标签都可以跨域加载资源，而不受同源策略的限制。</p><ol><li><p>这些带 <em>src</em> 属性的标签每次加载时，浏览器会发起一次 <em>GET</em> 请求。</p></li><li><p>通过 <em>src</em> 属性加载的资源，浏览器限制了 javascript 的权限，使其不能读、写返回的内容。</p></li></ol><a id="more"></a><h2 id="1-XSS-攻击"><a href="#1-XSS-攻击" class="headerlink" title="1. XSS 攻击"></a>1. XSS 攻击</h2><p>XSS (Cross-Site Scripting)，跨站脚本攻击。</p><h3 id="1-1-非持久型-XSS（反射型-XSS-）"><a href="#1-1-非持久型-XSS（反射型-XSS-）" class="headerlink" title="1.1 非持久型 XSS（反射型 XSS ）"></a>1.1 非持久型 XSS（反射型 XSS ）</h3><p><strong>原理</strong>：恶意攻击者往 Web 页面里插入恶意可执行网页脚本代码，当用户浏览该页之时，嵌入其中 Web 里面的脚本代码会被执行，从而可以达到攻击者盗取用户信息或其他侵犯用户安全隐私的目的。</p><p><strong>特征</strong>：</p><ol><li>即时性，不经过服务器存储，直接通过 HTTP 的 GET 和 POST 请求就能完成一次攻击，拿到用户隐私数据。</li><li>攻击者需要诱骗点击,必须要通过用户点击链接才能发起</li><li>反馈率低，所以较难发现和响应修复</li><li>盗取用户敏感保密信息</li></ol><h3 id="1-2-持久型-XSS（存储型-XSS）"><a href="#1-2-持久型-XSS（存储型-XSS）" class="headerlink" title="1.2 持久型 XSS（存储型 XSS）"></a>1.2 持久型 XSS（存储型 XSS）</h3><p><strong>原理</strong>：一般存在于 Form 表单提交等交互功能，如文章留言，提交文本信息等，恶意攻击者利用的 XSS 漏洞，将内容经正常功能提交进入数据库持久保存，当前端页面获得后端从数据库中读出的注入代码时，恰好将其渲染执行。</p><p><strong>特点</strong>：</p><ol><li>持久性，植入在数据库中</li><li>盗取用户敏感私密信息</li><li>危害面广</li></ol><h3 id="1-3-解决方案"><a href="#1-3-解决方案" class="headerlink" title="1.3 解决方案"></a>1.3 解决方案</h3><ol><li><p>设置白名单CSP</p><p>通常可以通过两种方式来开启 CSP：<br>设置 HTTP Header 中的 Content-Security-Policy<br>设置 meta 标签的方式，如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">http-equiv</span>=<span class="string">"Content-Security-Policy"</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">content</span>=<span class="string">"default-src *; style-src 'self' 'unsafe-inline' myxxx.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' myxxx.com"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>default-src &#39;self&#39;</code> 只允许加载本站资源</li><li><code>img-src https://*</code> 只允许加载 HTTPS 协议图片</li><li><code>child-src &#39;none&#39;</code> 允许加载任何来源框架</li></ul></li><li><p>后端处理用户输入提交的内容，通常做法是转义输入输出的内容，即对于引号、尖括号、斜杠进行转义。后端输出给前端的数据进行统一转义处理。</p></li><li><p>HttpOnly Cookie</p><p>Web 应用程序在设置 cookie 时，将其属性设为 <em>HttpOnly</em>，就可以避免该网页的 cookie 被客户端恶意 JavaScript 窃取，保护用户 cookie 信息。这是预防 XSS 攻击窃取用户 cookie 最有效的防御手段。</p></li><li><p>X-XSS-Protection设置: </p><p><code>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8; X-Content-Type-Options=nosniff; X-XSS-Protection: 1;mode=block&quot; /&gt;</code></p><p>或</p><p><code>&lt;meta http-equiv=&quot;X-XSS-Protection&quot; content=&quot;1; mode=block&quot; /&gt;</code></p><ul><li><code>0</code>：禁用XSS保护；</li><li><code>1</code>：启用XSS保护；</li><li><code>1; mode=block</code>：启用XSS保护，并在检查到XSS攻击时，停止渲染页面（例如IE8中，检查到攻击时，整个页面会被一个#替换）。`</li></ul></li></ol><h2 id="2-CSRF-攻击"><a href="#2-CSRF-攻击" class="headerlink" title="2. CSRF 攻击"></a>2. CSRF 攻击</h2><p>CSRF(Cross Site Request Forgery)，即跨站请求伪造，是一种常见的Web攻击，它利用用户<em>已登录</em>的身份，在用户毫不知情的情况下，以用户的名义完成非法操作。</p><h3 id="2-1-攻击步骤"><a href="#2-1-攻击步骤" class="headerlink" title="2.1 攻击步骤"></a>2.1 攻击步骤</h3><p>这里假定 <em>网站A</em> 为用户信任的网站，即被攻击的网站；<em>网站B</em> 为危险网站，即发出攻击的网站。</p><ol><li><p>用户在浏览器中登录 网站A；</p></li><li><p>网站A 通过验证，在浏览器中产生 cookie;</p></li><li><p>用户在没有登出 网站A 的情况下，访问了 网站B；</p></li><li><p>网站B 请求访问 网站A，发出了一个 request 请求；</p></li><li><p>根据 网站B 在 <em>step4</em> 中的请求，浏览器带着 <em>step2</em> 中产生的 cookie 访问 网站A。</p></li></ol><h3 id="2-2-解决方案"><a href="#2-2-解决方案" class="headerlink" title="2.2 解决方案"></a>2.2 解决方案</h3><ol><li><p><strong>Token 验证</strong>：目前比较完善的解决方案是加入 Anti-CSRF-Token, 即发送请求时在 HTTP 请求中以参数的形式加入一个随机产生的 token，服务器读取浏览器当前域 cookie 中这个 token值，进行比较校验。</p></li><li><p>可以对 Cookie 设置 <code>SameSite</code> 属性。该属性表示 Cookie 不随着跨域请求发送，可以很大程度减少 CSRF 的攻击，但是该属性目前并不是所有浏览器都兼容。</p></li><li><p>通过 Referer 限制，Referer 信息告诉服务器是从哪个页面链接过来的。意思是说，只接受本站的请求，服务器才做响应；如果不是，就拦截。</p></li><li><p>验证码操作。</p></li></ol><h2 id="3-SQL-注入"><a href="#3-SQL-注入" class="headerlink" title="3. SQL 注入"></a>3. SQL 注入</h2><p><strong>本质</strong>：数据和代码未分离，即数据当做了代码来执行。</p><p>有可能会造成获取数据库信息、管理员后台用户名和密码、读取服务器敏感文件等问题，甚至修改数据库内容。</p><h3 id="3-1-攻击步骤"><a href="#3-1-攻击步骤" class="headerlink" title="3.1 攻击步骤"></a>3.1 攻击步骤</h3><p>通过表单提交等方式，输入恶意代码，后端查询数据时，直接把前端提交的内容直接嵌入到将要执行的 SQL 语句中了。</p><p>例如：<code>$sql = &#39;select * from user where id =&#39;.$id;</code></p><p>这里用用户输入的变量 <code>$id</code> 来拼接 SQL 语句，存在安全隐患。如果 <code>$i = &#39;2 or 1=1&#39;</code>，这里就能轻松的获取到 user 表的仍意信息。利用 SQL 注入漏洞，我们能够获取想要的信息，同时可以通过猜测和报错获取到数据库其它表的结构和信息，如果数据库、服务器权限设置不当，甚至有可能能获取到整个服务器的控制权限。 </p><h3 id="3-2-解决方案"><a href="#3-2-解决方案" class="headerlink" title="3.2 解决方案"></a>3.2 解决方案</h3><ol><li><p><strong>限制权限</strong>：严格限制Web应用的数据库的操作权限，给此用户提供仅仅能够满足其工作的最低权限，从而最大限度的减少注入攻击对数据库的危害</p></li><li><p>`校验预期值**：后端代码检查输入的数据是否符合预期，严格限制变量的类型，例如使用正则表达式进行一些匹配处理。</p></li><li><p><strong>字符串转义</strong>：对进入数据库的特殊字符<code>&#39;，&quot;，，&lt;，&gt;，&amp;，，;</code> 等，进行转义处理，或编码转换。基本上所有的后端语言都有对字符串进行转义处理的方法，比如 lodash 的 <code>lodash._escapehtmlchar</code> 库。</p></li><li><p><strong>优化SQL查询</strong>：所有的查询语句建议使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到 SQL 语句中，即不要直接拼接 SQL 语句。例如 Node.js 中的 mysqljs 库的 <code>query</code> 方法中的 <code>?</code> 占位参数。</p></li></ol><h2 id="4-点击劫持"><a href="#4-点击劫持" class="headerlink" title="4. 点击劫持"></a>4. 点击劫持</h2><h3 id="4-1-攻击步骤"><a href="#4-1-攻击步骤" class="headerlink" title="4.1 攻击步骤"></a>4.1 攻击步骤</h3><p>通过 iframe 透明化，漏出来一个按钮，诱惑用户点击。</p><h3 id="4-2-解决方案"><a href="#4-2-解决方案" class="headerlink" title="4.2 解决方案"></a>4.2 解决方案</h3><ol><li><p>X-FRAME-OPTIONS 是一个 HTTP 响应头，在现代浏览器有一个很好的支持。这个 HTTP 响应头 就是为了防御用 iframe 嵌套的点击劫持攻击。X-FRAME-OPTIONS 有 3 个值可选：</p><ul><li><code>DENY</code>，表示页面不允许通过 iframe 的方式展示</li><li><code>SAMEORIGIN</code>，表示页面可以在相同域名下通过 iframe 的方式展示</li><li><code>ALLOW-FROM</code>，表示页面可以在指定来源的 iframe 中展示</li></ul></li><li><p>通过 js 的方法判断，来隐藏 iframe 显示的页面。</p></li></ol><h2 id="5-URL-跳转漏洞"><a href="#5-URL-跳转漏洞" class="headerlink" title="5. URL 跳转漏洞"></a>5. URL 跳转漏洞</h2><h3 id="5-1-攻击步骤"><a href="#5-1-攻击步骤" class="headerlink" title="5.1 攻击步骤"></a>5.1 攻击步骤</h3><p>借助未验证的 URL 跳转，将应用程序引导到不安全的第三方区域，从而导致的安全问题。</p><h3 id="5-2-解决方案"><a href="#5-2-解决方案" class="headerlink" title="5.2 解决方案"></a>5.2 解决方案</h3><ol><li><p>referer 的限制</p><p>如果确定传递URL参数进入的来源，我们可以通过该方式实现安全限制，保证该 URL 的有效性，避免恶意用户自己生成跳转链接</p></li><li><p>加入有效性验证 Token</p><p>我们保证所有生成的链接都是来自于我们可信域的，通过在生成的链接里加入用户不可控的 Token 对生成的链接进行校验，可以避免用户生成自己的恶意链接从而被利用，但是如果功能本身要求比较开放，可能导致有一定的限制。</p></li></ol><h2 id="6-OS-命令注入攻击"><a href="#6-OS-命令注入攻击" class="headerlink" title="6. OS 命令注入攻击"></a>6. OS 命令注入攻击</h2><h3 id="6-1-攻击步骤"><a href="#6-1-攻击步骤" class="headerlink" title="6.1 攻击步骤"></a>6.1 攻击步骤</h3><p>通过 Web 应用，执行非法的操作系统命令达到攻击的目的。</p><h3 id="6-2-解决方案"><a href="#6-2-解决方案" class="headerlink" title="6.2 解决方案"></a>6.2 解决方案</h3><ol><li><p>后端对前端提交内容进行规则限制（比如正则表达式）。</p></li><li><p>在调用系统命令前对所有传入参数进行命令行参数转义过滤。</p></li><li><p>不要直接拼接命令语句，借助一些工具做拼接、转义预处理，例如 Node.js 的 <code>shell-escape</code> npm包。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;常见的攻击类型&lt;/strong&gt;：XSS 攻击、CSRF 攻击、SQL 注入、点击劫持、URL 跳转漏洞、OS 命令注入攻击。&lt;/p&gt;
&lt;p&gt;浏览器安全其实是受&lt;em&gt;同源策略&lt;/em&gt;（同域名、同端口、同协议名）保护的，但是&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;等标签都可以跨域加载资源，而不受同源策略的限制。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;这些带 &lt;em&gt;src&lt;/em&gt; 属性的标签每次加载时，浏览器会发起一次 &lt;em&gt;GET&lt;/em&gt; 请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过 &lt;em&gt;src&lt;/em&gt; 属性加载的资源，浏览器限制了 javascript 的权限，使其不能读、写返回的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Web安全" scheme="https://huanggaofang.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="XSS攻击" scheme="https://huanggaofang.com/tags/XSS%E6%94%BB%E5%87%BB/"/>
    
      <category term="CSRF攻击" scheme="https://huanggaofang.com/tags/CSRF%E6%94%BB%E5%87%BB/"/>
    
      <category term="SQL注入" scheme="https://huanggaofang.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript生成随机数</title>
    <link href="https://huanggaofang.com/frontend/js/random/"/>
    <id>https://huanggaofang.com/frontend/js/random/</id>
    <published>2021-05-10T01:50:00.000Z</published>
    <updated>2021-07-21T07:08:53.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主要方法：Math"><a href="#主要方法：Math" class="headerlink" title="主要方法：Math"></a>主要方法：Math</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 向上取整</span></span><br><span class="line"><span class="built_in">Math</span>.ceil();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向下取整</span></span><br><span class="line"><span class="built_in">Math</span>.floor();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 四舍五入</span></span><br><span class="line"><span class="built_in">Math</span>.round();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 0.0 ~ 1.0 之间的一个伪随机数， 即：&gt;= 0 &amp;&amp; &lt; 1， 如：0.31415926</span></span><br><span class="line"><span class="built_in">Math</span>.random();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串转为数字，并向下取整</span></span><br><span class="line"><span class="built_in">parseInt</span>(string, radix);</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="常见随机数取值方法："><a href="#常见随机数取值方法：" class="headerlink" title="常见随机数取值方法："></a>常见随机数取值方法：</h2><ol><li><p>随机获取 1 到 10 的整数，其中取 0 的概览极小，即当 <code>Math.random()</code> 值等于 0 时，此方法结果才等于 0。</p><p><code>Math.ceil(Math.random()*10);</code></p></li><li><p>随机均衡获取 0 或者 1 的其中一个</p><p><code>Math.round(Math.random());</code></p></li><li><p>随机均衡获取 0 到 9 的整数</p><p><code>Math.floor(Math.random()*10);</code></p></li><li><p>随机获取 0 到 10 的整数，其中 取 0 或 10 的几率为其他数字几率的 50%。</p><p><code>Math.round(Math.random()*10);</code></p></li><li><p>随机均衡生成 [1 ~ max] 的整数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * (max + <span class="number">1</span>), <span class="number">10</span>);</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line"><span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max + <span class="number">1</span>));</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line"><span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random() * max);</span><br></pre></td></tr></table></figure></li><li><p>随机均衡生成 [0 ~ max] 的整数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * (max + <span class="number">1</span>), <span class="number">10</span>);</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line"><span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max + <span class="number">1</span>));</span><br></pre></td></tr></table></figure></li><li><p>随机均衡生成 [min ~ max] 的整数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>) + min, <span class="number">10</span>);</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line"><span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>) + min);</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;主要方法：Math&quot;&gt;&lt;a href=&quot;#主要方法：Math&quot; class=&quot;headerlink&quot; title=&quot;主要方法：Math&quot;&gt;&lt;/a&gt;主要方法：Math&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 向上取整&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.ceil();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 向下取整&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 四舍五入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.round();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 0.0 ~ 1.0 之间的一个伪随机数， 即：&amp;gt;= 0 &amp;amp;&amp;amp; &amp;lt; 1， 如：0.31415926&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 字符串转为数字，并向下取整&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(string, radix);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Javascript" scheme="https://huanggaofang.com/tags/Javascript/"/>
    
      <category term="随机" scheme="https://huanggaofang.com/tags/%E9%9A%8F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Lodash.js 应用总结</title>
    <link href="https://huanggaofang.com/frontend/lib/lodash.js/"/>
    <id>https://huanggaofang.com/frontend/lib/lodash.js/</id>
    <published>2021-05-06T08:50:00.000Z</published>
    <updated>2021-07-21T07:09:03.733Z</updated>
    
    <content type="html"><![CDATA[<p>to be continue…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;to be continue…&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="待填坑" scheme="https://huanggaofang.com/tags/%E5%BE%85%E5%A1%AB%E5%9D%91/"/>
    
      <category term="Javascript" scheme="https://huanggaofang.com/tags/Javascript/"/>
    
      <category term="Javascript Lib" scheme="https://huanggaofang.com/tags/Javascript-Lib/"/>
    
      <category term="Lodash.js" scheme="https://huanggaofang.com/tags/Lodash-js/"/>
    
      <category term="数据处理" scheme="https://huanggaofang.com/tags/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Day.js 应用总结</title>
    <link href="https://huanggaofang.com/frontend/lib/day.js/"/>
    <id>https://huanggaofang.com/frontend/lib/day.js/</id>
    <published>2021-05-06T08:40:00.000Z</published>
    <updated>2021-07-21T07:08:57.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Day-js-和-Moment-js-的区别与选择"><a href="#Day-js-和-Moment-js-的区别与选择" class="headerlink" title="Day.js 和 Moment.js 的区别与选择"></a>Day.js 和 Moment.js 的区别与选择</h2><p>Day.js 和 Moment.js 一样是处理时间和日期的 JavaScript 库。接口几乎完全一致，Day.js 体积比 Moment.js 小好几倍。</p><p>查看<a href="/lib/moment.js/">Moment.js 应用总结</a></p><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install dayjs --save</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dayjs = <span class="built_in">require</span>(<span class="string">'dayjs'</span>)</span><br><span class="line">dayjs().format()</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"dayjs.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">  dayjs().format()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Typescript"><a href="#Typescript" class="headerlink" title="Typescript"></a>Typescript</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> dayjs <span class="keyword">from</span> <span class="string">'dayjs'</span></span><br><span class="line">dayjs().format()</span><br></pre></td></tr></table></figure><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><h3 id="格式化参数"><a href="#格式化参数" class="headerlink" title="格式化参数"></a>格式化参数</h3><p><strong>注意</strong>: 如星期等数据需要先设置本地化格式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置为中文格式</span></span><br><span class="line">dayjs.locale(<span class="string">'zh-cn'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加依赖LocalizedFormat插件</span></span><br><span class="line"><span class="comment">// 浏览器加载方式 dayjs.extend(window.dayjs_plugin_localizedFormat)</span></span><br><span class="line">dayjs.extend(LocalizedFormat);</span><br></pre></td></tr></table></figure><h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dayjs() === dayjs(<span class="keyword">new</span> <span class="built_in">Date</span>()) <span class="comment">// true</span></span><br><span class="line">dayjs() === dayjs(<span class="literal">undefined</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p><code>dayjs(null)</code> 为无效输入。</p><h2 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h2><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><blockquote><p>参考资料：</p></blockquote><ol><li><a href="https://dayjs.gitee.io/docs/zh-CN/get-set/quarter" target="_blank" rel="noopener">Day.js中文网</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Day-js-和-Moment-js-的区别与选择&quot;&gt;&lt;a href=&quot;#Day-js-和-Moment-js-的区别与选择&quot; class=&quot;headerlink&quot; title=&quot;Day.js 和 Moment.js 的区别与选择&quot;&gt;&lt;/a&gt;Day.js 和 Moment.js 的区别与选择&lt;/h2&gt;&lt;p&gt;Day.js 和 Moment.js 一样是处理时间和日期的 JavaScript 库。接口几乎完全一致，Day.js 体积比 Moment.js 小好几倍。&lt;/p&gt;
&lt;p&gt;查看&lt;a href=&quot;/lib/moment.js/&quot;&gt;Moment.js 应用总结&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装使用&quot;&gt;&lt;a href=&quot;#安装使用&quot; class=&quot;headerlink&quot; title=&quot;安装使用&quot;&gt;&lt;/a&gt;安装使用&lt;/h2&gt;&lt;h3 id=&quot;Node-js&quot;&gt;&lt;a href=&quot;#Node-js&quot; class=&quot;headerlink&quot; title=&quot;Node.js&quot;&gt;&lt;/a&gt;Node.js&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install dayjs --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dayjs = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;dayjs&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dayjs().format()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Javascript" scheme="https://huanggaofang.com/tags/Javascript/"/>
    
      <category term="Day.js" scheme="https://huanggaofang.com/tags/Day-js/"/>
    
      <category term="Javascript Lib" scheme="https://huanggaofang.com/tags/Javascript-Lib/"/>
    
      <category term="时间处理" scheme="https://huanggaofang.com/tags/%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>AutoClick 自动点击 刷票刷网课</title>
    <link href="https://huanggaofang.com/project/autoclick/"/>
    <id>https://huanggaofang.com/project/autoclick/</id>
    <published>2021-05-06T07:50:00.000Z</published>
    <updated>2021-07-19T06:59:52.924Z</updated>
    
    <content type="html"><![CDATA[<h3 id="功能说明："><a href="#功能说明：" class="headerlink" title="功能说明："></a>功能说明：</h3><ol><li><p>延迟指定时间点击指定按钮</p></li><li><p>循环指定时间点击指定按钮</p></li></ol><h3 id="插件下载地址"><a href="#插件下载地址" class="headerlink" title="插件下载地址"></a>插件下载地址</h3><ol><li><p><a href="https://github.com/gaofanghuang/chrome-plug-in/tree/main/autoClick" target="_blank" rel="noopener">** Chrome 扩展版 Github **</a></p></li><li><p><a href="https://github.com/gaofanghuang/chrome-plug-in/raw/main/autoClick/AutoClick.crx" target="_blank" rel="noopener">** Chrome 扩展版 下载 **</a></p></li></ol><a id="more"></a><h2 id="功能更新："><a href="#功能更新：" class="headerlink" title="功能更新："></a>功能更新：</h2><h3 id="v0-1-2021-05-06："><a href="#v0-1-2021-05-06：" class="headerlink" title="v0.1 2021-05-06："></a>v0.1 2021-05-06：</h3><ol><li>发布v0.1</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;功能说明：&quot;&gt;&lt;a href=&quot;#功能说明：&quot; class=&quot;headerlink&quot; title=&quot;功能说明：&quot;&gt;&lt;/a&gt;功能说明：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;延迟指定时间点击指定按钮&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;循环指定时间点击指定按钮&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;插件下载地址&quot;&gt;&lt;a href=&quot;#插件下载地址&quot; class=&quot;headerlink&quot; title=&quot;插件下载地址&quot;&gt;&lt;/a&gt;插件下载地址&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/gaofanghuang/chrome-plug-in/tree/main/autoClick&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;** Chrome 扩展版 Github **&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/gaofanghuang/chrome-plug-in/raw/main/autoClick/AutoClick.crx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;** Chrome 扩展版 下载 **&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="个人项目" scheme="https://huanggaofang.com/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="Javascript" scheme="https://huanggaofang.com/tags/Javascript/"/>
    
      <category term="Chrome扩展" scheme="https://huanggaofang.com/tags/Chrome%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>Cocos Creator + Typescript 开发入门</title>
    <link href="https://huanggaofang.com/code/cocos/"/>
    <id>https://huanggaofang.com/code/cocos/</id>
    <published>2021-01-13T05:45:00.000Z</published>
    <updated>2021-07-21T08:00:22.383Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="属性类型的声明"><a href="#属性类型的声明" class="headerlink" title="属性类型的声明"></a>属性类型的声明</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ccclass, property &#125; = cc._decorator</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> BlockType = cc.Enum(&#123;dog:<span class="number">1</span>, cat: <span class="number">2</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">@ccclass</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> Player <span class="keyword">extends</span> cc.Component &#123;</span><br><span class="line">  <span class="comment">// 整型</span></span><br><span class="line">  <span class="meta">@property</span>(cc.Integer)</span><br><span class="line">  blockCount: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 浮点型</span></span><br><span class="line">  <span class="meta">@property</span>(cc.Float)</span><br><span class="line">  blockWidth: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 布尔型</span></span><br><span class="line">  <span class="meta">@property</span>(cc.Boolean)</span><br><span class="line">  blockIsDead: <span class="built_in">boolean</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 节点</span></span><br><span class="line">  <span class="meta">@property</span>(cc.Node)</span><br><span class="line">  blockItem: cc.Node = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 节点数组</span></span><br><span class="line">  <span class="meta">@property</span>([cc.Node])</span><br><span class="line">  blockList: <span class="built_in">Array</span>&lt;cc.Node&gt; = []</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 文本</span></span><br><span class="line">  <span class="meta">@property</span>(cc.Label)</span><br><span class="line">  blockName: cc.Label = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 预制体</span></span><br><span class="line">  <span class="meta">@property</span>(cc.Prefab)</span><br><span class="line">  blockPrefab: cc.Prefab = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 坐标</span></span><br><span class="line">  <span class="meta">@property</span>(cc.Vec2)</span><br><span class="line">  blockVec: cc.Vec2 = cc.v2()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 枚举类型</span></span><br><span class="line">  <span class="meta">@property</span>(&#123;</span><br><span class="line">      <span class="keyword">type</span>: BlockType</span><br><span class="line">  &#125;)</span><br><span class="line">  blockType = BlockType.dog</span><br><span class="line"></span><br><span class="line">  start() &#123;</span><br><span class="line">    <span class="comment">// init logic</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;&lt;h3 id=&quot;属性类型的声明&quot;&gt;&lt;a href=&quot;#属性类型的声明&quot; class=&quot;headerlink&quot; title=&quot;属性类型的声明&quot;&gt;&lt;/a&gt;属性类型的声明&lt;/h3&gt;&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123; ccclass, property &amp;#125; = cc._decorator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; BlockType = cc.Enum(&amp;#123;dog:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, cat: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@ccclass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Player &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; cc.Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 整型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@property&lt;/span&gt;(cc.Integer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  blockCount: &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 浮点型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@property&lt;/span&gt;(cc.Float)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  blockWidth: &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 布尔型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@property&lt;/span&gt;(cc.Boolean)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  blockIsDead: &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@property&lt;/span&gt;(cc.Node)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  blockItem: cc.Node = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 节点数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@property&lt;/span&gt;([cc.Node])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  blockList: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;&amp;lt;cc.Node&amp;gt; = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@property&lt;/span&gt;(cc.Label)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  blockName: cc.Label = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 预制体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@property&lt;/span&gt;(cc.Prefab)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  blockPrefab: cc.Prefab = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@property&lt;/span&gt;(cc.Vec2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  blockVec: cc.Vec2 = cc.v2()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 枚举类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@property&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;: BlockType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  blockType = BlockType.dog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  start() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// init logic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="游戏开发笔记" scheme="https://huanggaofang.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="待填坑" scheme="https://huanggaofang.com/tags/%E5%BE%85%E5%A1%AB%E5%9D%91/"/>
    
      <category term="Typescript" scheme="https://huanggaofang.com/tags/Typescript/"/>
    
      <category term="Cocos Creator" scheme="https://huanggaofang.com/tags/Cocos-Creator/"/>
    
      <category term="游戏引擎" scheme="https://huanggaofang.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>Lua 入门</title>
    <link href="https://huanggaofang.com/code/lua/"/>
    <id>https://huanggaofang.com/code/lua/</id>
    <published>2020-10-05T02:30:00.000Z</published>
    <updated>2021-07-21T08:00:41.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Lua-是什么"><a href="#1-Lua-是什么" class="headerlink" title="1. Lua 是什么"></a>1. Lua 是什么</h2><p>一种嵌入式脚本语言，为应用程序提供灵活的扩展和定制功能。通常用于制作游戏 Mod。</p><a id="more"></a><h3 id="1-1-安装调试"><a href="#1-1-安装调试" class="headerlink" title="1.1 安装调试"></a>1.1 安装调试</h3><p>在 VsCode 上搭建 Lua 编译环境</p><ol><li><p>安装 MinGW</p></li><li><p>安装 Lua 编译环境</p><p><a href="http://luadist.org/" target="_blank" rel="noopener">LuaDist官方下载地址</a></p></li><li><p>配置环境变量</p><p><img src="/images/lua/lua-path1.jpg" alt=""></p><p><img src="/images/lua/lua-path2.jpg" alt=""></p></li><li><p>Vscode 中 Lua 环境的配置</p><p>插件：<code>Lua Debug</code>、<code>Code Runner</code></p><p>Code Runner 配置:</p><p>勾选： </p><ul><li>✔ Run In Terminal</li><li>✔ Show Execution Message</li></ul><p><img src="/images/lua/runcode-config.jpg" alt=""></p></li><li><p>launch 配置</p><p>运行 → 添加配置 → 选择 Lua Debug</p><p><img src="/images/lua/launch.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line">"configurations": [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="attr">"program"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><ol start="6"><li>运行调试</li></ol><p><code>ctrl + shift + d</code> 打开运行面板，点击右上角的 <code>Run File</code> 运行 或 <code>Debug File</code> 调试。</p></li></ol><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><h3 id="2-1-类型-amp-值"><a href="#2-1-类型-amp-值" class="headerlink" title="2.1 类型&amp;值"></a>2.1 类型&amp;值</h3><p>Lua 是一种动态类型语言。Lua 没有类型定义，也就是说 Lua 的变量是没有类型的，只有值才有。</p><h4 id="2-1-1-基本类型"><a href="#2-1-1-基本类型" class="headerlink" title="2.1.1 基本类型"></a>2.1.1 基本类型</h4><p><strong>8种基本类型</strong>：<code>nil</code>，<code>boolean</code>，<code>number</code>，<code>string</code>，<code>function</code>，<code>userdata</code>，<code>thread</code> 和 <code>table</code>。</p><ol><li><p><code>nil</code>: 表示无效值，类似 javascript 中的 <code>null</code>。</p></li><li><p><code>boolean</code>: <code>true</code> 或 <code>false</code>。<code>nil</code> 和 <code>false</code> 为假，任何其他值都是真。</p></li><li><p><code>number</code>: 表示双精度类型的实浮点数。</p></li><li><p><code>string</code>: 字符串。</p></li><li><p><code>function</code>: 由 <code>Lua</code> 或 <code>C</code> 编写的函数。</p></li><li><p><code>userdata</code>: 允许将任意 <code>C</code> 数据结构存储在 Lua 变量中。</p></li><li><p><code>thread</code>: 表示执行的独立线路，用于执行协同程序。</p></li><li><p><code>table</code>: 关联数组，可以使用除 nil 和 NaN 之外的任何 Lua 值对数组进行索引，最简单构造表达式是<code>{}</code>，用来创建一个空表。</p></li></ol><p><strong>Tips</strong>: </p><ul><li><p><code>nil</code> 作比较时应该加上双引号</p></li><li><p>数字 <code>0</code> 也是 <code>true</code></p></li><li><p>当lua进行数学运算时，会尝试自动把值为数字类型为字符串的，转换为数字。</p></li><li><p>多行字符串用<code>[[]]</code>表示</p></li><li><p>字符串长度用 <code>#</code> 表示</p></li><li><p>Lua 数组的初始索引，不是 <em>0</em>， 而是<strong>1</strong>。</p></li></ul><h3 id="2-2-注释"><a href="#2-2-注释" class="headerlink" title="2.2 注释"></a>2.2 注释</h3><p>例：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--这是单行注释--</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"这是单行注释"</span>);</span><br><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment"> 这是多行注释</span></span><br><span class="line"><span class="comment"> 这是多行注释2</span></span><br><span class="line"><span class="comment"> --]]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"这是多行注释"</span>);</span><br></pre></td></tr></table></figure><h3 id="2-3-标识符"><a href="#2-3-标识符" class="headerlink" title="2.3 标识符"></a>2.3 标识符</h3><ol><li><p>Lua 区分大小写。</p></li><li><p>最好不要使用下划线加大写字母的标示符，因为这是 Lua 的内部全局变量格式，容易造成混淆冲突。</p></li><li><p>Lua 不允许使用特殊字符如 @, $, 和 % 来定义标示符</p></li></ol><p>例：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--正确的标识符--</span></span><br><span class="line">abc apple red_moon hotDog dior999 _abc</span><br><span class="line"></span><br><span class="line"><span class="comment">--错误的标识符--</span></span><br><span class="line">_ZOO d@w s$<span class="number">9</span> r%s</span><br></pre></td></tr></table></figure><h3 id="2-4-关键字"><a href="#2-4-关键字" class="headerlink" title="2.4 关键字"></a>2.4 关键字</h3><p>保留关键字不能作为常量或变量或其他用户自定义标示符：</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">and</td><td align="center">break</td><td align="center">do</td><td align="center">else</td></tr><tr><td align="center">elseif</td><td align="center">end</td><td align="center">false</td><td align="center">for</td></tr><tr><td align="center">function</td><td align="center">if</td><td align="center">in</td><td align="center">local</td></tr><tr><td align="center">nil</td><td align="center">not</td><td align="center">or</td><td align="center">repeat</td></tr><tr><td align="center">return</td><td align="center">then</td><td align="center">true</td><td align="center">until</td></tr><tr><td align="center">while</td><td align="center">goto</td><td align="center"></td><td align="center"></td></tr></tbody></table><h3 id="2-5-变量-amp-全局变量"><a href="#2-5-变量-amp-全局变量" class="headerlink" title="2.5 变量&amp;全局变量"></a>2.5 变量&amp;全局变量</h3><p>Lua 变量有三种类型：<code>全局变量</code>、<code>局部变量</code>、<code>表中的域</code>。</p><p>默认情况下，Lua 的变量是全局的，不需要刻意声明某个变量是全局变量。</p><p>当访问一个没有定义的变量时，不会报错，值为 nil。</p><p>想删除某个全局变量时，只需设置这个变量的值为 nil 即可。</p><p>变量的默认值均为 nil。</p><p>可以用 <code>local</code> 显式声明为<em>局部变量</em>。</p><h3 id="2-6-循环"><a href="#2-6-循环" class="headerlink" title="2.6 循环"></a>2.6 循环</h3><h4 id="2-6-1-循环处理方式"><a href="#2-6-1-循环处理方式" class="headerlink" title="2.6.1 循环处理方式"></a>2.6.1 循环处理方式</h4><table><thead><tr><th align="center">循环类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">while 循环</td><td align="center">在条件为 true 时，让程序重复地执行某些语句。执行语句前会先检查条件是否为 true。</td></tr><tr><td align="center">for 循环</td><td align="center">重复执行指定语句，重复次数可在 for 语句中控制。</td></tr><tr><td align="center">repeat…until</td><td align="center">重复执行循环，直到 指定的条件为真时为止</td></tr><tr><td align="center">循环嵌套</td><td align="center">可以在循环内嵌套一个或多个循环语句（while do … end;for … do … end;repeat … until;）</td></tr></tbody></table><p>例：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">#### <span class="number">2.6</span><span class="number">.2</span> 循环控制语句</span><br><span class="line"></span><br><span class="line">| 控制语句 | 描述 |</span><br><span class="line">| :<span class="comment">--: | :--: | </span></span><br><span class="line">| <span class="keyword">break</span> 语句 | 退出当前循环或语句，并开始脚本执行紧接着的语句。 | </span><br><span class="line">| <span class="keyword">goto</span> 语句 | 将程序的控制点转移到一个标签处。 | </span><br><span class="line"></span><br><span class="line">#### <span class="number">2.6</span><span class="number">.3</span> 无限循环</span><br><span class="line"></span><br><span class="line">在循环体中如果条件永远为 `<span class="literal">true</span>` 循环语句就会永远执行下去。</span><br><span class="line"></span><br><span class="line">### <span class="number">2.7</span> 条件</span><br><span class="line"></span><br><span class="line">| 语句 | 描述 |</span><br><span class="line">| :<span class="comment">--: | :--: | </span></span><br><span class="line">| <span class="keyword">if</span> 语句 | <span class="keyword">if</span> 语句 由一个布尔表达式作为条件判断，其后紧跟其他语句组成。 |</span><br><span class="line">| <span class="keyword">if</span>...<span class="keyword">else</span> 语句 | <span class="keyword">if</span> 语句 可以与 <span class="keyword">else</span> 语句搭配使用, 在 <span class="keyword">if</span> 条件表达式为 <span class="literal">false</span> 时执行 <span class="keyword">else</span> 语句代码。 |</span><br><span class="line">| <span class="keyword">if</span> 嵌套语句 | 可以在<span class="keyword">if</span> 或 <span class="keyword">else</span> <span class="keyword">if</span>中使用一个或多个 <span class="keyword">if</span> 或 <span class="keyword">else</span> <span class="keyword">if</span> 语句 。 |</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line"></span><br><span class="line">```lua</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-Lua-是什么&quot;&gt;&lt;a href=&quot;#1-Lua-是什么&quot; class=&quot;headerlink&quot; title=&quot;1. Lua 是什么&quot;&gt;&lt;/a&gt;1. Lua 是什么&lt;/h2&gt;&lt;p&gt;一种嵌入式脚本语言，为应用程序提供灵活的扩展和定制功能。通常用于制作游戏 Mod。&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏开发笔记" scheme="https://huanggaofang.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="lau" scheme="https://huanggaofang.com/tags/lau/"/>
    
  </entry>
  
  <entry>
    <title>Flex 和 grid 布局详解</title>
    <link href="https://huanggaofang.com/frontend/base/css-flex/"/>
    <id>https://huanggaofang.com/frontend/base/css-flex/</id>
    <published>2020-09-25T02:00:00.000Z</published>
    <updated>2021-07-21T07:15:01.172Z</updated>
    
    <content type="html"><![CDATA[<p>Flex 布局，即弹性布局，任何一个容器都可以设置为 Flex 布局。</p><p>Grid 布局，即网格布局，任何一个容器都可以设置为 Grid 布局。</p><blockquote><p>Flex 布局是轴线布局，只能指定”项目”针对轴线的位置，可以看作是一维布局。Grid 布局则是将容器划分成”行”和”列”，产生单元格，然后指定”项目所在”的单元格，可以看作是二维布局。</p></blockquote><a id="more"></a><style>.base-flex {  display: flex;}.base-gird {  display: grid;}.base-box {  width: 300px;  min-height: 100px;  background: #f2f2f2;  margin-bottom: 1rem;}.base-dot {  width: 30px;  height: 30px;  color: #ffffff;  display: flex;  align-items: center;  justify-content: center;}.dot-big {  width: 100px;}.color1 {  background: #79E2B7;}.color2 {  background: #28C5C2;}.color3 {  background: #8347ff;}.row {  flex-direction: row;}.row-reverse {  flex-direction: row-reverse;}.column {  flex-direction: column;}.column-reverse {  flex-direction: column-reverse;}.nowrap {  flex-wrap: nowrap;}.wrap {  flex-wrap: wrap;}.wrap-reverse {  flex-wrap: wrap-reverse;}.x-start {  justify-content: flex-start;}.x-end {  justify-content: flex-end;}.x-center {  justify-content: center;}.x-between {  justify-content: space-between;}.x-around {  justify-content: space-around;}.x-evenly {  justify-content: space-evenly;}.y-start {  align-items: flex-start;}.y-end {  align-items: flex-end;}.y-center {  align-items: center;}.y-baseline {  align-items: baseline;}.y-stretch {  align-items: stretch;}.table {  height: auto;}.table-row {  width: 100%;}.table-cell {  flex: 1;}.y-stretch .table-cell {  height: auto;}.all-y-start {  align-content: flex-start;}.all-y-end {  align-content: flex-end;}.all-y-center {  align-content: center;}.all-y-between {  align-content: space-between;}.all-y-around {  align-content: space-around;}.all-y-stretch {  align-content: stretch;}.row-start {  justify-items: flex-start;}.row-end {  justify-items: flex-end;}.row-center {  justify-items: center;}.row-stretch {  justify-items: stretch;}.row-baseline {  justify-items: baseline;}.row-h312 {  grid-template-rows: 30% 10% 20%;}.col-w312 {  grid-template-columns: 30% 10% 20%;}.gird-9 {  grid-template-rows: 33.33% 33.33% 33.33%;  grid-template-columns: 33.33% 33.33% 33.33%;}.gird-16 {  grid-template-rows: repeat(4, 25%);  grid-template-columns: repeat(4, 25%);}.gird-16-2 {  grid-template-rows: repeat(2, 10px 50px);  grid-template-columns: repeat(2, 10px 50px 80px);}.gird-16-3 {  grid-template-rows: repeat(2, 10px 50px);  grid-template-columns: repeat(auto-fill, 50px);}.gird-fr-1-2 {  grid-template-rows: repeat(2, 30px);  grid-template-columns: repeat(2, 1fr 2fr);}.gird-fr-50-3-1 {  grid-template-rows: repeat(2, 30px);  grid-template-columns: 50px 3fr 1fr;}.gird-minmax-20-50 {  grid-template-columns: 1fr 2fr minmax(20px, 50px);}.gird-r3-minmax-20-50 {  grid-template-columns: repeat(3, 1fr 2fr minmax(20px, 50px));}.gird-auto-1 {  grid-template-columns: 1fr auto 2fr;}.gird-name {  grid-template-rows: [r1] 50px [r2] 100px [r3];  grid-template-columns: [c1] 50px [c2] 30px [c3] 80px [c4];}.gird-gap-10-10 {  gap: 10px 10px;}.gird-area-9 {  grid-template-areas: 'g1 g2 g3'                       'g4 g5 g6'                       'g7 g8 g9';}.gird-flow-row {  grid-auto-flow: row;}.gird-flow-column {  grid-auto-flow: column;}.gird-flow-dense {  grid-auto-flow: row dense;}.gird-flow-dense .base-dot {  width: 100%;  height: 100%;}.dot-1 {  grid-row-start: 1;  grid-row-end: 3;  }.dot-2 {  grid-row-start: 1;  grid-row-end: 4;  }.dot-3 {  grid-row-start: 1;  grid-row-end: 5;  }.dot-4 {  grid-row-start: r2;  grid-row-end: r3;    grid-column-start: c2;  grid-column-end: c3;}.dot-5 {  grid-row-start: g6-start;  grid-row-end: g9-end;    grid-column-start: g6-start;  grid-column-end: g9-end;}.dot-6 {  grid-row-start: span 3;   grid-column-start: span 2;}.dot-7 {  grid-row: g3-start / g5-end;   grid-column: g3-start / g5-end;}.z-9 {  z-index: 9;}.gird-x-center {  justify-items: center;}.gird-y-center {  align-items: center;}.gird-x-c-center {  justify-content: center;}.gird-y-c-center {  align-content: center;}.gird-auto-row {  grid-auto-rows: 20px;}.area-5 {  grid-area: g5;}.order-9 {  order: 9;}.grow-2 {  flex-grow: 2;}.grow-3 {  flex-grow: 3;}.shrink-0 {  flex-shrink: 0;}.shrink-2 {  flex-shrink: 2;}.basis-1 {  flex-basis: 100px;}.basis-half {  flex-basis: 50%;}</style><h2 id="1-Flex-基础语法"><a href="#1-Flex-基础语法" class="headerlink" title="1. Flex 基础语法"></a>1. Flex 基础语法</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.base-flex</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="comment">// or 行内弹性布局</span></span><br><span class="line">  <span class="comment">// display: inline-flex;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>，设为 Flex 布局以后，子元素的 <code>float</code>、<code>clear</code> 和 <code>vertical-align</code> 属性将失效。</p><p><img src="/images/flex/axis.png" alt=""></p><h3 id="1-1-Flex-容器的属性"><a href="#1-1-Flex-容器的属性" class="headerlink" title="1.1 Flex 容器的属性"></a>1.1 Flex 容器的属性</h3><h4 id="1-1-1-flex-direction"><a href="#1-1-1-flex-direction" class="headerlink" title="1.1.1 flex-direction"></a>1.1.1 flex-direction</h4><p><code>flex-direction</code>: 项目的排列方向</p><ul><li>row 从左到右</li><li>row-reverse 从右到左</li><li>column 从下到上</li><li>column-reverse 从上到下</li></ul><p>flex-direction: <code>row</code> | <code>row-reverse</code> | <code>column</code> | <code>column-reverse</code>;</p><p><strong>例</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-box base-flex"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>项目沿 X 轴方向，从左到右排列</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.row</span> &#123;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex row">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目沿 X 轴方向，从右到左排列</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.row-reverse</span> &#123;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex row-reverse">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目沿 Y 轴方向，从下到上排列</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.column</span> &#123;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex column">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目沿 Y 轴方向，从上到下排列</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.column-reverse</span> &#123;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex column-reverse">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><h4 id="1-1-2-flex-wrap"><a href="#1-1-2-flex-wrap" class="headerlink" title="1.1.2 flex-wrap"></a>1.1.2 flex-wrap</h4><p><code>flex-wrap</code>: 项目的换行方式</p><ul><li>nowrap 不换行</li><li>wrap 换行，从上到下，第一行在上方</li><li>wrap-reverse 换行，从下到上，第一行在下方</li></ul><p>flex-wrap: <code>nowrap</code> | <code>wrap</code> | <code>wrap-reverse</code>;</p><p><strong>例</strong>：</p><ul><li>项目不换行</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nowrap</span> &#123;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex nowrap">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><ul><li>项目换行</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex wrap">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><ul><li>项目换行，从下到上，第一行在下方</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrap-reverse</span> &#123;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex wrap-reverse">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><h4 id="1-1-3-flex-flow"><a href="#1-1-3-flex-flow" class="headerlink" title="1.1.3 flex-flow"></a>1.1.3 flex-flow</h4><p><code>flex-flow</code>: 项目的排列方向和换行方式缩写，默认值为 row nowrap</p><p>flex-flow: <code>&lt;flex-direction&gt;</code> || <code>&lt;flex-wrap&gt;</code></p><p><strong>例</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-box base-flex row-reverse wrap-reverse"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot dot-big color1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot dot-big color2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot dot-big color3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot dot-big color1"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot dot-big color2"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot dot-big color3"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot dot-big color1"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot dot-big color2"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot dot-big color3"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="base-box base-flex row-reverse wrap-reverse">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><h4 id="1-1-4-justify-content"><a href="#1-1-4-justify-content" class="headerlink" title="1.1.4 justify-content"></a>1.1.4 justify-content</h4><p><code>justify-content</code>: 项目 X 轴的对齐方式</p><ul><li>flex-start 向开始端对齐，默认为左</li><li>flex-end 向结束端对齐，默认为右</li><li>center 水平居中对齐</li><li>space-between 两端对齐，项目之间的间隔都相等</li><li>space-around 每个项目两侧的间隔相等（项目之间的间隔比项目与边框的间隔大一倍）</li><li>space-evenly 项目到容器的边距比与项目之前的间隔比一致</li></ul><p>justify-content: <code>flex-start</code> | <code>flex-end</code> | <code>center</code> | <code>space-between</code> | <code>space-around</code> | <code>space-evenly</code>;</p><p><strong>例</strong>：</p><ul><li>项目沿 X 轴方向，向<em>开始端</em>对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.x-start</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex x-start">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><p><strong>Tips</strong>: 当设置了 <code>flex-direction: row-reverse;</code> 时，<code>justify-content: flex-start;</code> 不起作用, 是因为设置 flex-direction 后，轴线的方向发生变化，<code>flex-start</code> 方向也随之变化。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-box base-flex row-reverse x-start"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="base-box base-flex row-reverse x-start">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-box base-flex row-reverse x-end"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="base-box base-flex row-reverse x-end">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目沿 X 轴方向，向<em>结束端</em>对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.x-end</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex x-end">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目沿 X 轴方向，向中间对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.x-center</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex x-center">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目沿 X 轴方向，两端对齐，项目到容器的边距为 0，项目之间的间隔均等</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.x-between</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex x-between">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目沿 X 轴方向，项目到容器的边距<em>比</em>为 1，项目之间的间隔<em>比</em>为 2</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.x-around</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex x-around">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><p><strong>Tips</strong>：这里想要项目到容器的边距比与项目之前的间隔比一致的话，可以使用 <code>space-between</code> 属性, 再给容器设置宽高为 0 的伪元素<code>before</code>、<code>after</code>，即可。更简单的方法，使用<code>space-evenly</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box-padding</span><span class="selector-pseudo">:before</span>,</span><br><span class="line"><span class="selector-class">.box-padding</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-box base-flex x-between box-padding"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><style>  .box-padding:before,  .box-padding:after {    display: block;    width: 0;    height: 0;    content: "";  }</style><div class="base-box base-flex x-between box-padding">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目到容器的边距比与项目之前的间隔比一致</li></ul><p><strong>Tips</strong>: 注意该属性部分浏览器可能还未实现，如果考虑到兼容性，可以使用上面的方法。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.x-evenly</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex x-evenly">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><h4 id="1-1-5-align-items"><a href="#1-1-5-align-items" class="headerlink" title="1.1.5 align-items"></a>1.1.5 align-items</h4><p><code>align-items</code>: 项目 Y 轴的对齐方式</p><ul><li>flex-start 向开始端对齐，默认为上</li><li>flex-end 向结束端对齐，默认为下</li><li>center 垂直居中对齐</li><li>baseline 项目里第一行文字的基线对齐</li><li>stretch 如果项目未设置高度或设为 auto，将占满整个容器的高度</li></ul><p>align-items: <code>flex-start</code> | <code>flex-end</code> | <code>center</code> | <code>baseline</code> | <code>stretch</code>;</p><p><strong>例</strong>：</p><ul><li>项目沿 Y 轴方向，向<em>开始端</em>对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.y-start</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex y-start">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目沿 Y 轴方向，向<em>结束端</em>对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.y-end</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex y-end">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目沿 Y 轴方向，向中间对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.y-center</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex y-center">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>项目里第一行文字的基线对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.y-baseline</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: baseline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-box base-flex y-baseline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"font-size: 1.6rem"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"font-size: 0.4rem"</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-dot color3"</span> <span class="attr">style</span>=<span class="string">"font-size: 0.8rem"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="base-box base-flex y-baseline">  <div class="base-dot color1">1</div>  <div class="base-dot color2">    <div style="font-size: 1.8rem">2</div>    <div style="font-size: 0.8rem">2.1</div>  </div>  <div class="base-dot color3" style="font-size: 1.2rem">3</div></div><ul><li>如果项目未设置高度或设为 auto，将占满整个容器的高度</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.y-stretch</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex y-stretch">  <div class="base-dot color1" style="height: auto">1</div>  <div class="base-dot color2" style="height: auto">2</div>  <div class="base-dot color3" style="height: auto">3</div></div><p><strong>Tips</strong>：<code>stretch</code> 这个属性在显示表格数据的时候，可以使单元格高度自适应。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-box table base-flex wrap"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-flex table-row"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-cell base-dot color1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-cell base-dot color2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-cell base-dot color3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"base-flex table-row"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-cell base-flex x-center y-center y-stretch"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-cell base-dot color1"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-row table-cell"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-row table-cell base-dot color2"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-row table-cell base-dot color3"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="base-box table base-flex wrap">  <div class="base-flex table-row">    <div class="table-cell base-dot color1">1</div>    <div class="table-cell base-dot color2">2</div>    <div class="table-cell base-dot color3">3</div>  </div>  <div class="base-flex table-row">    <div class="table-cell base-flex x-center y-center y-stretch">      <div class="table-cell base-dot color1">4</div>    </div>    <div class="table-row table-cell">      <div class="table-row table-cell base-dot color2">5</div>      <div class="table-row table-cell base-dot color3">6</div>      <div class="table-row table-cell base-dot color1">7</div>    </div>  </div></div><h4 id="1-1-6-align-content"><a href="#1-1-6-align-content" class="headerlink" title="1.1.6 align-content"></a>1.1.6 align-content</h4><p><code>align-content</code>: 多根轴线的对齐方式(仅存在多根轴线时起作用)</p><p><strong>Tips</strong>:</p><ol><li><p>当<code>flex-wrap: wrap</code>时，项目会自动换行，此时就产生了多根轴线，项目换了几行就有几根轴线。这里说的轴线仅表示 Y 轴。</p></li><li><p>当存在多轴线时，<code>align-items: flex-start</code>不起作用。</p></li></ol><ul><li>flex-start 向开始端对齐</li><li>flex-end 向结束端对齐</li><li>center 垂直居中对齐</li><li>space-between 两端对齐，项目之间的间隔都相等</li><li>space-around 每个项目两侧的间隔相等（项目之间的间隔比项目与边框的间隔大一倍）</li><li>stretch 如果项目未设置高度或设为 auto，将占满整个容器的高度</li></ul><p>align-content: <code>flex-start</code> | <code>flex-end</code> | <code>center</code> | <code>space-between</code> | <code>space-around</code> | <code>stretch</code>;</p><p><strong>例</strong>：</p><ul><li>项目沿 Y 轴方向，向开始端对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.all-y-start</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: flex-start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex wrap all-y-start" style="height: 120px">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><ul><li>项目沿 Y 轴方向，向结束端对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.all-y-end</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex wrap all-y-end" style="height: 120px">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><ul><li>项目沿 Y 轴方向，向中间对齐</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.all-y-center</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex wrap all-y-center" style="height: 120px">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><ul><li>项目沿 Y 轴方向，两端对齐，项目之间的间隔都相等</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.all-y-between</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex wrap all-y-between" style="height: 120px">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><ul><li>项目沿 Y 轴方向，每个项目两侧的间隔相等（项目之间的间隔比项目与边框的间隔大一倍）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.all-y-around</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex wrap all-y-around" style="height: 120px">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><ul><li>如果项目未设置高度或设为 auto，将占满整个容器的高度</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.all-y-stretch</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex wrap all-y-stretch" style="height: 120px">  <div class="base-dot dot-big color1" style="height: auto">1</div>  <div class="base-dot dot-big color2" style="height: auto">2</div>  <div class="base-dot dot-big color3" style="height: auto">3</div>  <div class="base-dot dot-big color1" style="height: auto">4</div>  <div class="base-dot dot-big color2" style="height: auto">5</div>  <div class="base-dot dot-big color3" style="height: auto">6</div>  <div class="base-dot dot-big color1" style="height: auto">7</div>  <div class="base-dot dot-big color2" style="height: auto">8</div>  <div class="base-dot dot-big color3" style="height: auto">9</div></div><h3 id="1-2-Flex-项目的属性"><a href="#1-2-Flex-项目的属性" class="headerlink" title="1.2 Flex 项目的属性"></a>1.2 Flex 项目的属性</h3><h4 id="1-2-1-order"><a href="#1-2-1-order" class="headerlink" title="1.2.1 order"></a>1.2.1 order</h4><p><code>order</code>: 定义项目的排列顺序，数值小的排前面。默认为 0。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.order-9</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: <span class="number">9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex">  <div class="base-dot color1 order-9">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><h4 id="1-2-2-flex-grow"><a href="#1-2-2-flex-grow" class="headerlink" title="1.2.2 flex-grow"></a>1.2.2 flex-grow</h4><p><code>flex-grow</code>：属性定义项目的放大比例，数字越大占的比例越大。默认为 0。为 0 时，即使存在剩余空间，也不放大。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.grow-2</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.grow-3</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex">  <div class="base-dot color1">1</div>  <div class="base-dot color2 grow-2">2</div>  <div class="base-dot color3 grow-3">3</div></div><h4 id="1-2-3-flex-shrink"><a href="#1-2-3-flex-shrink" class="headerlink" title="1.2.3 flex-shrink"></a>1.2.3 flex-shrink</h4><p><code>flex-shrink</code>：属性定义了项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小。为 0 时，即使空间不足也不缩小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.shrink-0</span> &#123;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.shrink-2</span> &#123;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex">  <div class="base-dot dot-big color1">1</div>  <div class="base-dot dot-big color2">2</div>  <div class="base-dot dot-big color3 shrink-2">3</div>  <div class="base-dot dot-big color1">4</div>  <div class="base-dot dot-big color2">5</div>  <div class="base-dot dot-big color3">6</div>  <div class="base-dot dot-big color1 shrink-0">7</div>  <div class="base-dot dot-big color2">8</div>  <div class="base-dot dot-big color3">9</div></div><h4 id="1-2-4-flex-basis"><a href="#1-2-4-flex-basis" class="headerlink" title="1.2.4 flex-basis"></a>1.2.4 flex-basis</h4><p><code>flex-basis</code>：设置项目的初始大小</p><p><strong>Tips</strong>：当一个元素同时被设置了 flex-basis (除值为 auto 外) 和 width (或者在 flex-direction: column 情况下设置了 height) ，flex-basis 具有更高的优先级。auto 表示项目的原大小。</p><p>flex-basis: <code>&lt;width&gt;</code> | <code>auto</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.basis-1</span> &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.basis-half</span> &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-flex">  <div class="base-dot color1">1</div>  <div class="base-dot color2 basis-1">2</div>  <div class="base-dot color3 basis-half">3</div></div><h4 id="1-2-5-flex"><a href="#1-2-5-flex" class="headerlink" title="1.2.5 flex"></a>1.2.5 flex</h4><p><code>flex</code>：<code>&lt;flex-grow&gt;</code>, <code>&lt;flex-shrink&gt;</code> 和 <code>&lt;flex-basis&gt;</code> 的简写，默认值为 0 1 auto。后两个属性可选。</p><p>两个快捷值：</p><ol><li><p>auto (1 1 auto)</p></li><li><p>none (0 0 auto)</p></li></ol><h4 id="1-2-6-align-self"><a href="#1-2-6-align-self" class="headerlink" title="1.2.6 align-self"></a>1.2.6 align-self</h4><p>align-self 类似于容器中的 align-items， 作用于项目，并且优先级高于容器中的 align-items。默认值为auto 时表示继承容器中的 align-items 的值，如果没有容器，则等同于 stretch。</p><p>align-self: <code>auto</code> | <code>flex-start</code> | <code>flex-end</code> | <code>center</code> | <code>baseline</code> | <code>stretch</code>;</p><h2 id="2-Grid-基础语法"><a href="#2-Grid-基础语法" class="headerlink" title="2. Grid 基础语法"></a>2. Grid 基础语法</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.base-grid</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="comment">// or 行内网格布局</span></span><br><span class="line">  <span class="comment">// display: inline-grid;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>，设为网格布局以后，容器项目的<code>float</code>、<code>display: inline-block</code>、<code>display: table-cell</code>、<code>vertical-align</code>和<code>column-*</code>等设置都将失效。</p><h3 id="2-1-Grid-容器的属性"><a href="#2-1-Grid-容器的属性" class="headerlink" title="2.1 Grid 容器的属性"></a>2.1 Grid 容器的属性</h3><h4 id="2-1-1-grid-template-rows-amp-grid-template-columns"><a href="#2-1-1-grid-template-rows-amp-grid-template-columns" class="headerlink" title="2.1.1 grid-template-rows &amp; grid-template-columns"></a>2.1.1 grid-template-rows &amp; grid-template-columns</h4><ul><li><p><code>grid-template-rows</code>：设置网格中每一行的行高。</p></li><li><p><code>grid-template-columns</code>：设置网格中每一列的列宽。</p></li></ul><p><strong>例</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.row-h312</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="number">30%</span> <span class="number">10%</span> <span class="number">20%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird row-h312">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.col-w312</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">30%</span> <span class="number">10%</span> <span class="number">20%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird col-w312">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li>切分九宫格</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-9</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="number">33.33%</span> <span class="number">33.33%</span> <span class="number">33.33%</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">33.33%</span> <span class="number">33.33%</span> <span class="number">33.33%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-9">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3">9</div></div><ul><li>repeat() 自动重复切割</li></ul><p><code>repeat(&lt;重复次数&gt;, &lt;重复的宽度&gt;)</code>, <em>重复宽度</em>可以设置为多个值为一组，以空格隔开，<em>重复次数</em>可以使用<code>auto-fill</code>关键字来进行自动计算。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-16</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">4</span>, <span class="number">25%</span>);</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">4</span>, <span class="number">25%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-16">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3">9</div>  <div class="base-dot color1">10</div>  <div class="base-dot color2">11</div>  <div class="base-dot color3">12</div>  <div class="base-dot color1">13</div>  <div class="base-dot color2">14</div>  <div class="base-dot color3">15</div>  <div class="base-dot color3">16</div></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-16-2</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">10px</span> <span class="number">50px</span>);</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">10px</span> <span class="number">50px</span> <span class="number">80px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-16-2">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3">9</div>  <div class="base-dot color1">10</div>  <div class="base-dot color2">11</div>  <div class="base-dot color3">12</div>  <div class="base-dot color1">13</div>  <div class="base-dot color2">14</div>  <div class="base-dot color3">15</div>  <div class="base-dot color3">16</div></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-16-3</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">10px</span> <span class="number">50px</span>);</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(auto-fill, <span class="number">50px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-16-3">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3">9</div>  <div class="base-dot color1">10</div>  <div class="base-dot color2">11</div>  <div class="base-dot color3">12</div>  <div class="base-dot color1">13</div>  <div class="base-dot color2">14</div>  <div class="base-dot color3">15</div>  <div class="base-dot color3">16</div></div><ul><li>fr 网格宽度比例</li></ul><p><strong>Tips</strong>: 使用<code>fr</code>作为网格宽度单位，并且使用<code>auto-fill</code>设置为<code>repeat()</code>的重复次数时，该样式不生效，此时 css 报错：_Invalid property value_。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-fr-1-2</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">30px</span>);</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">1</span>fr <span class="number">2</span>fr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-fr-1-2">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-fr-50-3-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">30px</span>);</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">50px</span> <span class="number">3</span>fr <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的意思是说，第一列宽为 50px，剩下的宽度为<code>(100% - 50px)</code>，然后第二列宽度为 <code>(100% - 50px)/ (3 + 1) * 3</code>，第三列宽度为 <code>(100% - 50px) / (3 + 1) * 1</code>。</p><div class="base-box base-gird gird-fr-50-3-1">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div></div><ul><li>minmax() 宽度范围</li></ul><p><code>minmax(&lt;最小值&gt;, &lt;最大值&gt;)</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-minmax-20-50</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">2</span>fr <span class="built_in">minmax</span>(<span class="number">20px</span>, <span class="number">50px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-minmax-20-50">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-r3-minmax-20-50</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">3</span>, <span class="number">1</span>fr <span class="number">2</span>fr minmax(<span class="number">20px</span>, <span class="number">50px</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Tips</strong>：这里第 7、8、9 列的宽度和第 1、2、4 列的宽度不一致，是因为使用了 fr 为单位，此时列宽优先为单元格的列宽。</p><div class="base-box base-gird gird-r3-minmax-20-50">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div></div><ul><li>auto 关键字</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-auto-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr auto <span class="number">2</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Tips</strong>：当某列的宽设置为 auto 时，此时列宽优先为单元格的列宽。</p><div class="base-box base-gird gird-auto-1">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div></div><ul><li>网格线的命名</li></ul><p>可以使用方括号<code>[]</code>，指定每一根网格线的名字。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-name</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: [r1] <span class="number">50px</span> [r2] <span class="number">100px</span> [r3];</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: [c1] <span class="number">50px</span> [c2] <span class="number">30px</span> [c3] <span class="number">80px</span> [c4];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-name">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div></div><h4 id="2-2-2-row-gap-amp-column-gap-amp-gap"><a href="#2-2-2-row-gap-amp-column-gap-amp-gap" class="headerlink" title="2.2.2 row-gap &amp; column-gap &amp; gap"></a>2.2.2 row-gap &amp; column-gap &amp; gap</h4><ul><li><p><code>row-gap</code> 行与行之间的间距</p></li><li><p><code>column-gap</code> 列与列之间的间距</p></li><li><p><code>gap</code> 行间距与列间距的简写 <code>gap: &lt;row-gap&gt; &lt;column-gap&gt;;</code></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-gap-10-10</span> &#123;</span><br><span class="line">  <span class="attribute">gap</span>: <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-9 gird-gap-10-10">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div></div><h4 id="2-2-3-grid-template-areas"><a href="#2-2-3-grid-template-areas" class="headerlink" title="2.2.3 grid-template-areas"></a>2.2.3 grid-template-areas</h4><p><code>grid-template-areas</code>指定区域，一个区域由单个或多个单元格组成。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-area-9</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-areas</span>:</span><br><span class="line">    <span class="string">'g1 g2 g3'</span></span><br><span class="line">    <span class="string">'g4 g5 g6'</span></span><br><span class="line">    <span class="string">'g7 g8 g9'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Tips</strong>: 区域的命名会影响到网格线，每个区域的起始网格线，会自动命名为<code>[区域名-start]</code>，终止网格线自动命名为<code>[区域名-end]</code>。</p><div class="base-box base-gird gird-9 gird-area-9">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3">9</div></div><p><strong>Q</strong>：划分区域和网格线的作用？</p><p><strong>A</strong>：可以在指定项目（单元格）位置和大小的时候使用，详见 → <a href="#2-2-1-grid-column-start-amp-grid-column-end-amp-grid-row-start-amp-grid-row-end">2.2.1 grid-column-start &amp; grid-column-end &amp; grid-row-start &amp; grid-row-end</a></p><h4 id="2-2-4-grid-auto-flow"><a href="#2-2-4-grid-auto-flow" class="headerlink" title="2.2.4 grid-auto-flow"></a>2.2.4 grid-auto-flow</h4><p><code>grid-auto-flow</code>，指定项目的排列顺序。</p><ul><li><p><code>row</code> 默认值<code>row</code>，先从左到右横排，如果第一行排满就切换到第二行，继续排。</p></li><li><p><code>column</code> 先从上到下竖排，如果第一列排满就切换到第二列，继续排。</p></li><li><p><code>row dense</code> 横排紧凑模式，如果出现空隙，则调度后面合适的项目填补</p></li><li><p><code>column dense</code> 竖排紧凑模式，如果出现空隙，则调度后面合适的项目填补</p></li></ul><p><strong>Tips</strong>: 使用<code>row dense</code>和<code>column dense</code>会打乱项目的顺序，适合在瀑布流排版的时候使用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-flow-row</span> &#123;</span><br><span class="line">  <span class="attribute">grid-auto-flow</span>: row;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.gird-flow-column</span> &#123;</span><br><span class="line">  <span class="attribute">grid-auto-flow</span>: column;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-9 gird-flow-column">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3">9</div></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-flow-dense</span> &#123;</span><br><span class="line">  <span class="attribute">grid-auto-flow</span>: row dense;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-16 gird-flow-dense gird-gap-10-10">  <div class="base-dot color1 dot-1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1 dot-3">4</div>  <div class="base-dot color2 dot-2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3 dot-1">9</div></div><h4 id="2-1-5-justify-items-amp-align-items-amp-place-items"><a href="#2-1-5-justify-items-amp-align-items-amp-place-items" class="headerlink" title="2.1.5 justify-items &amp; align-items &amp; place-items"></a>2.1.5 justify-items &amp; align-items &amp; place-items</h4><ul><li><code>justify-items</code>: 单元格内容的水平对齐方式。</li></ul><p>start 向开始端对齐，默认为左<br>end 向结束端对齐，默认为右<br>center 水平居中对齐<br>stretch 如果项目未设置高度或设为 auto，将占满整个容器的高度</p><p>justify-items: <code>start</code> | <code>end</code> | <code>center</code> | <code>stretch</code>;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-x-center</span> &#123;</span><br><span class="line">  <span class="attribute">justify-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-9 gird-x-center">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3">9</div></div><ul><li><code>align-items</code>: 单元格内容的垂直对齐方式。</li></ul><p>align-items: <code>start</code> | <code>end</code> | <code>center</code> | <code>stretch</code>;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-y-center</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-9 gird-y-center">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3">9</div></div><ul><li><code>place-items</code>: justify-items 和 align-items 的简写，水平垂直居中的对齐方式</li></ul><p><code>place-items: start end;</code>，这里如果省略第二个值，则浏览器认为与第一个值相等。</p><h4 id="2-1-6-justify-content-amp-justify-content-amp-place-content"><a href="#2-1-6-justify-content-amp-justify-content-amp-place-content" class="headerlink" title="2.1.6 justify-content &amp; justify-content &amp; place-content"></a>2.1.6 justify-content &amp; justify-content &amp; place-content</h4><ul><li><code>justify-content</code>: 内容区域(网格相对于容器)的水平对齐方式。</li></ul><p>justify-content: <code>start</code> | <code>end</code> | <code>center</code> | <code>stretch</code> | <code>space-around</code> | <code>space-between</code> | <code>space-evenly</code>;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-x-c-center</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird col-w312 gird-x-c-center">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><ul><li><code>align-content</code>: 内容区域(网格相对于容器)的垂直对齐方式。</li></ul><p>align-content: <code>start</code> | <code>end</code> | <code>center</code> | <code>stretch</code> | <code>space-around</code> | <code>space-between</code> | <code>space-evenly</code>;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-y-c-center</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird col-w312 gird-y-c-center">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div></div><h4 id="2-1-7-grid-auto-columns-amp-grid-auto-rows"><a href="#2-1-7-grid-auto-columns-amp-grid-auto-rows" class="headerlink" title="2.1.7 grid-auto-columns &amp; grid-auto-rows"></a>2.1.7 grid-auto-columns &amp; grid-auto-rows</h4><p>用来指定浏览器自动创建的多余网格的列宽和行高。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird-auto-row</span> &#123;</span><br><span class="line">  <span class="attribute">grid-auto-rows</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-9 gird-auto-row">  <div class="base-dot color1">1</div>  <div class="base-dot color2">2</div>  <div class="base-dot color3">3</div>  <div class="base-dot color1">4</div>  <div class="base-dot color2">5</div>  <div class="base-dot color3">6</div>  <div class="base-dot color1">7</div>  <div class="base-dot color2">8</div>  <div class="base-dot color3">9</div>  <div class="base-dot color1">10</div>  <div class="base-dot color2">11</div></div><h4 id="2-1-8-grid-template-amp-grid"><a href="#2-1-8-grid-template-amp-grid" class="headerlink" title="2.1.8 grid-template &amp; grid"></a>2.1.8 grid-template &amp; grid</h4><ul><li><p><code>grid-template</code>: grid-template-columns、grid-template-rows 和 grid-template-areas 的简写</p></li><li><p><code>grid</code>: grid-template-rows、grid-template-columns、grid-template-areas、 grid-auto-rows、grid-auto-columns 和 grid-auto-flow 的简写</p></li></ul><h3 id="2-2-Grid-项目的属性"><a href="#2-2-Grid-项目的属性" class="headerlink" title="2.2 Grid 项目的属性"></a>2.2 Grid 项目的属性</h3><h4 id="2-2-1-grid-column-start-amp-grid-column-end-amp-grid-row-start-amp-grid-row-end"><a href="#2-2-1-grid-column-start-amp-grid-column-end-amp-grid-row-start-amp-grid-row-end" class="headerlink" title="2.2.1 grid-column-start &amp; grid-column-end &amp; grid-row-start &amp; grid-row-end"></a>2.2.1 grid-column-start &amp; grid-column-end &amp; grid-row-start &amp; grid-row-end</h4><ul><li><p><code>grid-column-start</code>: 定位项目左边框所在的垂直线网格</p></li><li><p><code>grid-column-end</code>: 定位项目右边框所在的垂直线网格</p></li><li><p><code>grid-row-start</code>: 定位项目上边框所在的水平线网格</p></li><li><p><code>grid-row-end</code>: 定位项目下边框所在的水平线网格</p></li></ul><p><strong>例</strong>：</p><ol><li><p>以第几条网格线定位</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dot-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">grid-row-end</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-9"> <div class="base-dot color1 dot-1" style="width: auto; height: auto">1</div> <div class="base-dot color2">2</div> <div class="base-dot color3">3</div> <div class="base-dot color1">4</div> <div class="base-dot color2">5</div> <div class="base-dot color3">6</div></div></li><li><p>以网格线名字定位</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dot-4</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: r2;</span><br><span class="line">  <span class="attribute">grid-row-end</span>: r3;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: c2;</span><br><span class="line">  <span class="attribute">grid-column-end</span>: c3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-name"> <div class="base-dot color1 dot-4" style="width: auto; height: auto">1</div> <div class="base-dot color2">2</div> <div class="base-dot color3">3</div> <div class="base-dot color1">4</div> <div class="base-dot color2">5</div> <div class="base-dot color3">6</div></div></li><li><p>以区域定位</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dot-5</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: g5-start;</span><br><span class="line">  <span class="attribute">grid-row-end</span>: g6-end;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: g5-end;</span><br><span class="line">  <span class="attribute">grid-column-end</span>: g6-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-area-9"> <div class="base-dot color1 dot-5" style="width: auto; height: auto">1</div> <div class="base-dot color2">2</div> <div class="base-dot color3">3</div> <div class="base-dot color1">4</div> <div class="base-dot color2">5</div> <div class="base-dot color3">6</div></div></li><li><p>span 跨越网格</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dot-6</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: span <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: span <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-16"> <div class="base-dot color1 dot-6" style="width: auto; height: auto">1</div> <div class="base-dot color2">2</div> <div class="base-dot color3">3</div> <div class="base-dot color1">4</div> <div class="base-dot color2">5</div> <div class="base-dot color3">6</div></div></li><li><p>指定项目重叠顺序</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.z-9</span> &#123;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-area-9"> <div class="base-dot color1 dot-5 z-9" style="width: auto; height: auto;">1</div> <div class="base-dot color2">2</div> <div class="base-dot color3">3</div> <div class="base-dot color1">4</div> <div class="base-dot color2 dot-7" style="width: auto; height: auto">5</div> <div class="base-dot color3">6</div></div></li></ol><h4 id="2-2-2-grid-column-amp-grid-row"><a href="#2-2-2-grid-column-amp-grid-row" class="headerlink" title="2.2.2 grid-column &amp; grid-row"></a>2.2.2 grid-column &amp; grid-row</h4><ul><li><p><code>grid-column</code>: grid-column-start 和 grid-column-end 的简写</p></li><li><p><code>grid-row</code>: grid-row-start 和 grid-row-end 的简写</p></li></ul><p>grid-column: <code>&lt;start-line&gt;</code> / <code>&lt;end-line&gt;</code></p><p>grid-row: <code>&lt;start-line&gt;</code> / <code>&lt;end-line&gt;</code></p><p><strong>Tips</strong>: 如果斜杠后面的参数不写，则默认跨越 <em>1</em> 个网格。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dot-7</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: g3-start / g5-end; </span><br><span class="line">  <span class="attribute">grid-column</span>: g3-start / g5-end;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 这里 .dot-7 效果 = .dot-8 */</span></span><br><span class="line"><span class="selector-class">.dot-8</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: g3-start / span <span class="number">2</span>; </span><br><span class="line">  <span class="attribute">grid-column</span>: g3-start / span <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-3-grid-area"><a href="#2-2-3-grid-area" class="headerlink" title="2.2.3 grid-area"></a>2.2.3 grid-area</h4><ol><li><p>指定项目放在某个区域</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.area-5</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: g5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="base-box base-gird gird-area-9"> <div class="base-dot color1 area-5">1</div> <div class="base-dot color2">2</div> <div class="base-dot color3">3</div> <div class="base-dot color1">4</div> <div class="base-dot color2">5</div> <div class="base-dot color3">6</div></div></li><li><p>用作 <code>grid-row-start</code>、<code>grid-column-start</code>、<code>grid-row-end</code>、<code>grid-column-end</code> 的简写</p><p>grid-area: <code>&lt;row-start&gt;</code> / <code>&lt;column-start&gt;</code> / <code>&lt;row-end&gt;</code> / <code>&lt;column-end&gt;</code></p></li></ol><h4 id="2-2-4-justify-self-amp-align-self-amp-place-self"><a href="#2-2-4-justify-self-amp-align-self-amp-place-self" class="headerlink" title="2.2.4 justify-self &amp; align-self &amp; place-self"></a>2.2.4 justify-self &amp; align-self &amp; place-self</h4><ul><li><p>justify-self: <code>start</code> | <code>end</code> | <code>center</code> | <code>stretch</code></p></li><li><p>align-self: <code>start</code> | <code>end</code> | <code>center</code> | <code>stretch</code></p></li><li><p>place-self: <code>&lt;align-self&gt;</code> <code>&lt;justify-self&gt;</code></p></li></ul><h2 id="3-常用布局"><a href="#3-常用布局" class="headerlink" title="3. 常用布局"></a>3. 常用布局</h2><h3 id="3-1-页面布局"><a href="#3-1-页面布局" class="headerlink" title="3.1 页面布局"></a>3.1 页面布局</h3><h4 id="3-1-1-单列布局"><a href="#3-1-1-单列布局" class="headerlink" title="3.1.1 单列布局"></a>3.1.1 单列布局</h4><ol><li><p>上中下居中</p></li><li><p>上下通栏，中间居中</p></li></ol><h4 id="3-1-2-两列布局"><a href="#3-1-2-两列布局" class="headerlink" title="3.1.2 两列布局"></a>3.1.2 两列布局</h4><ol><li><p>左边固定宽度高度（高度为屏幕高度）；右边宽度自适应，高度随内容滚动</p></li><li><p>左边固定宽度，高度跟随右边；右边宽度自适应，高度随内容滚动</p></li></ol><h4 id="3-1-3-三列布局"><a href="#3-1-3-三列布局" class="headerlink" title="3.1.3 三列布局"></a>3.1.3 三列布局</h4><ol><li><p>左右侧边栏高度跟随中间（等高），左右宽度固定；中间内容高度滚动，中间宽度自适应</p></li><li><p>左右侧边栏高度跟随中间（等高），中间内容高度滚动，左中右按比例宽度自适应</p></li></ol><h4 id="3-1-4-粘连布局"><a href="#3-1-4-粘连布局" class="headerlink" title="3.1.4 粘连布局"></a>3.1.4 粘连布局</h4><ol><li>当container内容高度大于屏幕高度时，footer跟随在内容后面；当container内容高度小于屏幕高度时，footer位于屏幕底部。</li></ol><h3 id="3-2-组件布局"><a href="#3-2-组件布局" class="headerlink" title="3.2 组件布局"></a>3.2 组件布局</h3><h3 id="3-3-业务布局"><a href="#3-3-业务布局" class="headerlink" title="3.3 业务布局"></a>3.3 业务布局</h3><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><p><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">《Flex 布局教程：语法篇》 by 阮一峰</a></p></li><li><p><a href="http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html" target="_blank" rel="noopener">《CSS Grid 网格布局教程》 by 阮一峰</a></p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Box_Alignment/Box_Alignment_in_Flexbox" target="_blank" rel="noopener">《Box alignment in Flexbox》 by MDN</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Flex 布局，即弹性布局，任何一个容器都可以设置为 Flex 布局。&lt;/p&gt;
&lt;p&gt;Grid 布局，即网格布局，任何一个容器都可以设置为 Grid 布局。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Flex 布局是轴线布局，只能指定”项目”针对轴线的位置，可以看作是一维布局。Grid 布局则是将容器划分成”行”和”列”，产生单元格，然后指定”项目所在”的单元格，可以看作是二维布局。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="CSS" scheme="https://huanggaofang.com/tags/CSS/"/>
    
      <category term="Flex" scheme="https://huanggaofang.com/tags/Flex/"/>
    
      <category term="grid" scheme="https://huanggaofang.com/tags/grid/"/>
    
      <category term="布局" scheme="https://huanggaofang.com/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>Easy API</title>
    <link href="https://huanggaofang.com/project/easyapi/"/>
    <id>https://huanggaofang.com/project/easyapi/</id>
    <published>2020-09-16T06:50:00.000Z</published>
    <updated>2021-07-19T06:59:52.924Z</updated>
    
    <content type="html"><![CDATA[<p>一个符合 RESTful API 架构的 Web 接口，使用 Nest + MySql 开发。</p><a id="more"></a><h2 id="1-用户模块"><a href="#1-用户模块" class="headerlink" title="1.用户模块"></a>1.用户模块</h2><h3 id="1-1-注册账号"><a href="#1-1-注册账号" class="headerlink" title="1.1 注册账号"></a>1.1 注册账号</h3><p>地址：<code>/api/user/register</code></p><p>方法：<code>Post</code></p><p>参数:<br><strong>body</strong>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">/** 用户名 */</span></span><br><span class="line">  userName: string,</span><br><span class="line">  <span class="comment">/** 密码 */</span></span><br><span class="line">  password: string</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">/** 0 请求成功 */</span></span><br><span class="line">  <span class="string">"ReturnCode"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"ErrorMassage"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="string">"Data"</span>: &#123;</span><br><span class="line">    <span class="comment">/** 用户名 */</span></span><br><span class="line">    <span class="string">"userName"</span>: <span class="string">"abc123"</span>,</span><br><span class="line">    <span class="comment">/** 昵称 */</span></span><br><span class="line">    <span class="string">"nickName"</span>: <span class="string">"abc123"</span>,</span><br><span class="line">    <span class="comment">/** 普通用户 */</span></span><br><span class="line">    <span class="string">"role"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="comment">/** 用户id */</span></span><br><span class="line">    <span class="string">"id"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="comment">/** 创建时间 */</span></span><br><span class="line">    <span class="string">"createTime"</span>: <span class="string">"2020-09-16T07:11:16.000Z"</span>,</span><br><span class="line">    <span class="comment">/** 更新时间 */</span></span><br><span class="line">    <span class="string">"updateTime"</span>: <span class="string">"2020-09-16T07:11:16.000Z"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-登录账号"><a href="#1-2-登录账号" class="headerlink" title="1.2 登录账号"></a>1.2 登录账号</h3><p>地址：<code>/api/user/login</code></p><p>方法：<code>Post</code></p><p>参数：<br><strong>body</strong>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* 用户名 */</span></span><br><span class="line">  userName: string,</span><br><span class="line">  <span class="comment">/* 密码 */</span></span><br><span class="line">  password: string</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"ReturnCode"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"ErrorMassage"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="string">"Data"</span>: &#123;</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">"userName"</span>: <span class="string">"abc123"</span>,</span><br><span class="line">    <span class="string">"nickName"</span>: <span class="string">"abc123"</span>,</span><br><span class="line">    <span class="string">"role"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">"createTime"</span>: <span class="string">"2020-09-16T07:11:16.000Z"</span>,</span><br><span class="line">    <span class="string">"updateTime"</span>: <span class="string">"2020-09-16T07:11:16.000Z"</span>,</span><br><span class="line">    <span class="string">"token"</span>: <span class="string">"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFiYzEyMyIsImlkIjoyLCJuaWNrTmFtZSI6ImFiYzEyMyIsInJvbGUiOjAsImlhdCI6MTYwMDI0MDU2NiwiZXhwIjoxNjAwMjY5MzY2fQ.FSaFgz21MYa1VFfTzK5aOrYeSrnG-DYMmdH_oHW6sAg"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-根据id获取用户信息"><a href="#1-2-根据id获取用户信息" class="headerlink" title="1.2 根据id获取用户信息"></a>1.2 根据id获取用户信息</h3><p>地址：<code>/api/user/{id}</code></p><p>方法：<code>Get</code></p><p>参数：<code>{}</code></p><p>返回：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"ReturnCode"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"ErrorMassage"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="string">"Data"</span>: &#123;</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">"userName"</span>: <span class="string">"abc123"</span>,</span><br><span class="line">    <span class="string">"nickName"</span>: <span class="string">"abc123"</span>,</span><br><span class="line">    <span class="string">"role"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">"createTime"</span>: <span class="string">"2020-09-16T07:11:16.000Z"</span>,</span><br><span class="line">    <span class="string">"updateTime"</span>: <span class="string">"2020-09-16T07:11:16.000Z"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-登录后编辑用户信息"><a href="#1-3-登录后编辑用户信息" class="headerlink" title="1.3 登录后编辑用户信息"></a>1.3 登录后编辑用户信息</h3><p>地址：<code>/api/user/{id}</code></p><p>方法：<code>Patch</code></p><p>参数：</p><p><strong>Authorization</strong>: <code>BearerToken={token}</code></p><p><strong>body</strong>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  nickName: <span class="string">"hahaha"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"ReturnCode"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"ErrorMassage"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="string">"Data"</span>: <span class="string">""</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个符合 RESTful API 架构的 Web 接口，使用 Nest + MySql 开发。&lt;/p&gt;
    
    </summary>
    
    
      <category term="个人项目" scheme="https://huanggaofang.com/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="Typescript" scheme="https://huanggaofang.com/tags/Typescript/"/>
    
      <category term="Nest" scheme="https://huanggaofang.com/tags/Nest/"/>
    
      <category term="API" scheme="https://huanggaofang.com/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>知乎Plus Zhihu Plus</title>
    <link href="https://huanggaofang.com/project/zhihuplus/"/>
    <id>https://huanggaofang.com/project/zhihuplus/</id>
    <published>2020-09-16T06:00:00.000Z</published>
    <updated>2021-07-19T06:59:52.925Z</updated>
    
    <content type="html"><![CDATA[<h3 id="功能说明："><a href="#功能说明：" class="headerlink" title="功能说明："></a>功能说明：</h3><ol><li><p>增加暗色极简阅读模式，保护眼睛；</p></li><li><p>去除官方或用户插入的广告，更易阅读;</p></li><li><p>升级为纤细优雅的滚动条，使画面更简洁；</p></li><li><p>增加无图模式，摸鱼必备。</p></li></ol><a id="more"></a><h3 id="插件下载地址"><a href="#插件下载地址" class="headerlink" title="插件下载地址"></a>插件下载地址</h3><ol><li><p><a href="https://github.com/gaofanghuang/chrome-plug-in/tree/main/zhihuPlus" target="_blank" rel="noopener">** Chrome 扩展版 **</a> → 最新版</p></li><li><p><a href="https://greasyfork.org/zh-CN/scripts/411416-%E7%9F%A5%E4%B9%8Eplus" target="_blank" rel="noopener">** Tampermonkey Userscript 油猴脚本版 → Greasy Fork **</a> → 此版本已停止更新</p></li></ol><h2 id="功能更新："><a href="#功能更新：" class="headerlink" title="功能更新："></a>功能更新：</h2><h3 id="v0-3-2021-01-13"><a href="#v0-3-2021-01-13" class="headerlink" title="v0.3 2021-01-13:"></a>v0.3 2021-01-13:</h3><ol><li>发布 Chrome 扩展版</li><li>增加无图模式</li></ol><h3 id="v0-2-2020-09-17"><a href="#v0-2-2020-09-17" class="headerlink" title="v0.2 2020-09-17:"></a>v0.2 2020-09-17:</h3><ol><li>增加了：外站链接点击后直接跳转</li><li>修复了：关闭阅读模式时，样式未完全恢复的问题</li><li>增加了：专栏页面阅读模式</li></ol><h3 id="v0-1-2020-09-16："><a href="#v0-1-2020-09-16：" class="headerlink" title="v0.1 2020-09-16："></a>v0.1 2020-09-16：</h3><ol><li>发布v0.1</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;功能说明：&quot;&gt;&lt;a href=&quot;#功能说明：&quot; class=&quot;headerlink&quot; title=&quot;功能说明：&quot;&gt;&lt;/a&gt;功能说明：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;增加暗色极简阅读模式，保护眼睛；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;去除官方或用户插入的广告，更易阅读;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;升级为纤细优雅的滚动条，使画面更简洁；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;增加无图模式，摸鱼必备。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="个人项目" scheme="https://huanggaofang.com/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="Javascript" scheme="https://huanggaofang.com/tags/Javascript/"/>
    
      <category term="Chrome扩展" scheme="https://huanggaofang.com/tags/Chrome%E6%89%A9%E5%B1%95/"/>
    
      <category term="Tampermonkey" scheme="https://huanggaofang.com/tags/Tampermonkey/"/>
    
  </entry>
  
  <entry>
    <title>Javascript 数据类型及结构</title>
    <link href="https://huanggaofang.com/frontend/js/data-type/"/>
    <id>https://huanggaofang.com/frontend/js/data-type/</id>
    <published>2020-06-06T02:40:00.000Z</published>
    <updated>2021-07-21T07:08:38.302Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原始类型"><a href="#原始类型" class="headerlink" title="原始类型"></a>原始类型</h2><h3 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h3><p>基本类型（基本数值、基本数据类型）是一种<em>既非对象也无方法</em>的数据。</p><p>在 JavaScript 中，共有<em>7</em>种基本类型：string，number，bigint，boolean，null，undefined，symbol (ECMAScript 2016新增)。</p><a id="more"></a><ol><li><p><code>string</code>: 字符串</p></li><li><p><code>number</code>: 数值</p></li><li><p><code>bigint</code>: 大整数</p></li><li><p><code>boolean</code>: 布尔</p></li><li><p><code>null</code>: 空值</p></li><li><p><code>undefined</code>: 未定义</p></li><li><p><code>symbol</code>: 字面量</p></li></ol><h3 id="bigint"><a href="#bigint" class="headerlink" title="bigint"></a>bigint</h3><p>bigint 在平时的开发中很少用到，它用于表示大于 2^53 - 1 的整数，和 number 的区别在于：number 的最大值为 2^53 - 1，而 BigInt 可以表示任意大的整数。</p><h3 id="浮点"><a href="#浮点" class="headerlink" title="浮点"></a>浮点</h3><p>JavaScript 内部，所有数字都是以64位浮点数形式储存，即使整数也是如此。所以，1与1.0是相同的，是同一个数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">0.1</span> + <span class="number">0.2</span></span><br><span class="line"><span class="built_in">console</span>.log(a, a === <span class="number">0.3</span>) <span class="comment">// 0.30000000000000004 false</span></span><br></pre></td></tr></table></figure><p><code>D1.D2D3D4...Dp x BE</code>, 这种通用形式被称作浮点数。</p><p>浮点数的好处是它可以用来表示任何数值。例如，整数 1 可以表示为 1.0 × 10^0。光的速度可以表示为2.99792458 × 108 m/s。1/2 可以被表示为二进制形式 0.1 × 2^0。</p><p><strong>处理浮点数</strong>：</p><ol><li><p>在算数运算之前或之后完成取舍</p></li><li><p>仅是用于显示时，使用<code>toPrecision()</code> 和 <code>str.toFixed()</code>处理，之后记得要转回 number 类型</p></li><li><p>使用 sinfuljs 或 mathjs 库</p></li></ol><h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><h3 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h3><h3 id="十进制"><a href="#十进制" class="headerlink" title="十进制"></a>十进制</h3><h2 id="隐式-显式-名义和鸭子类型"><a href="#隐式-显式-名义和鸭子类型" class="headerlink" title="隐式, 显式, 名义和鸭子类型"></a>隐式, 显式, 名义和鸭子类型</h2><h2 id="值类型和引用类型"><a href="#值类型和引用类型" class="headerlink" title="值类型和引用类型"></a>值类型和引用类型</h2><h2 id="与-typeof-与-instanceof"><a href="#与-typeof-与-instanceof" class="headerlink" title="== 与 ===, typeof 与 instanceof"></a>== 与 ===, typeof 与 instanceof</h2><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><p>查看<a href="/js/data-handle">数据处理</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原始类型&quot;&gt;&lt;a href=&quot;#原始类型&quot; class=&quot;headerlink&quot; title=&quot;原始类型&quot;&gt;&lt;/a&gt;原始类型&lt;/h2&gt;&lt;h3 id=&quot;基本类型&quot;&gt;&lt;a href=&quot;#基本类型&quot; class=&quot;headerlink&quot; title=&quot;基本类型&quot;&gt;&lt;/a&gt;基本类型&lt;/h3&gt;&lt;p&gt;基本类型（基本数值、基本数据类型）是一种&lt;em&gt;既非对象也无方法&lt;/em&gt;的数据。&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，共有&lt;em&gt;7&lt;/em&gt;种基本类型：string，number，bigint，boolean，null，undefined，symbol (ECMAScript 2016新增)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="待填坑" scheme="https://huanggaofang.com/tags/%E5%BE%85%E5%A1%AB%E5%9D%91/"/>
    
      <category term="Javascript" scheme="https://huanggaofang.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>Python 开发入门</title>
    <link href="https://huanggaofang.com/code/python/"/>
    <id>https://huanggaofang.com/code/python/</id>
    <published>2020-06-04T02:33:00.000Z</published>
    <updated>2021-07-21T08:00:43.732Z</updated>
    
    <content type="html"><![CDATA[<p>to be continue …</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;to be continue …&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="游戏开发笔记" scheme="https://huanggaofang.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://huanggaofang.com/tags/Python/"/>
    
      <category term="待填坑" scheme="https://huanggaofang.com/tags/%E5%BE%85%E5%A1%AB%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>LayUI -- Layer &amp; LayDate 应用总结</title>
    <link href="https://huanggaofang.com/frontend/lib/layer/"/>
    <id>https://huanggaofang.com/frontend/lib/layer/</id>
    <published>2020-06-04T02:30:00.000Z</published>
    <updated>2021-07-21T07:09:00.521Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Layer.js 是基于 JQuery 的一款 UI 插件，是专用于 Web 的弹出层组件。</p><p>官网地址：<a href="https://layer.layui.com/" target="_blank" rel="noopener">https://layer.layui.com/</a></p><p>LayDate.js 是基于 JQuery 的一款 UI 插件，是专用于 Web 的日期与时间组件。</p><p>官网地址：<a href="https://www.layui.com/laydate/" target="_blank" rel="noopener">https://www.layui.com/laydate/</a></p><h2 id="Layer-使用方法"><a href="#Layer-使用方法" class="headerlink" title="Layer 使用方法"></a>Layer 使用方法</h2><h3 id="Alert"><a href="#Alert" class="headerlink" title="Alert"></a>Alert</h3><!-- 弹出基础 Alert --><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-test"</span> <span class="attr">onclick</span>=<span class="string">"testBaseAlert()"</span>&gt;</span>弹出基础 Alert<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testBaseAlert</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  layer.alert(<span class="string">"弹出基础Alert"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><button class="btn btn-test" onclick="testBaseAlert()">弹出基础 Alert</button></p><!-- 弹出带回调的 Alert --><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-test"</span> <span class="attr">onclick</span>=<span class="string">"testBackAlert()"</span>&gt;</span></span><br><span class="line">  弹出带回调的 Alert</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testBackAlert</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  layer.alert(<span class="string">"弹出回调Alert"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"弹出回调Alert"</span>, index);</span><br><span class="line">    layer.close(index);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><button class="btn btn-test" onclick="testBackAlert()">弹出带回调的 Alert</button></p><!-- 弹出自定义 Alert --><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-test"</span> <span class="attr">onclick</span>=<span class="string">"testDiyAlert()"</span>&gt;</span>弹出自定义 Alert<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testDiyAlert</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  layer.alert(<span class="string">"弹出自定义Alert"</span>, &#123;</span><br><span class="line">    <span class="comment">// 右上角关闭按钮的另外一种样式</span></span><br><span class="line">    closeBtn: <span class="number">2</span>,</span><br><span class="line">    cancel: <span class="function"><span class="keyword">function</span> (<span class="params">index, layero</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 点右上角关闭按钮时触发</span></span><br><span class="line">      <span class="keyword">if</span> (confirm(<span class="string">"确定要关闭么"</span>)) &#123;</span><br><span class="line">        <span class="comment">// 只有当点击confirm框的确定时，该层才会关闭</span></span><br><span class="line">        layer.close(index);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><button class="btn btn-test" onclick="testDiyAlert()">弹出自定义 Alert</button></p><h3 id="Confirm"><a href="#Confirm" class="headerlink" title="Confirm"></a>Confirm</h3><!-- 弹出基础 Confirm --><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-test"</span> <span class="attr">onclick</span>=<span class="string">"testBaseConfirm()"</span>&gt;</span></span><br><span class="line">  弹出基础 Confirm</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testBaseConfirm</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  layer.confirm(</span><br><span class="line">    <span class="string">"是否确认删除？"</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      btn: [<span class="string">"确认"</span>, <span class="string">"取消"</span>], <span class="comment">//按钮</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      layer.msg(<span class="string">"删除成功"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      layer.msg(<span class="string">"取消删除"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><button class="btn btn-test" onclick="testBaseConfirm()">弹出基础 Confirm</button></p><h3 id="Loading"><a href="#Loading" class="headerlink" title="Loading"></a>Loading</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> loading = layer.load();</span><br><span class="line"><span class="comment">// 关闭loading</span></span><br><span class="line">layer.close(loading);</span><br><span class="line"><span class="comment">// 强制关闭所有弹框</span></span><br><span class="line">layer.closeAll();</span><br></pre></td></tr></table></figure><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">layer.msg(<span class="string">"删除成功"</span>);</span><br></pre></td></tr></table></figure><h3 id="Iframe"><a href="#Iframe" class="headerlink" title="Iframe"></a>Iframe</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testBaseIframe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  layer.open(&#123;</span><br><span class="line">    type: <span class="number">2</span>,</span><br><span class="line">    title: <span class="string">"layer mobile页"</span>,</span><br><span class="line">    shadeClose: <span class="literal">true</span>,</span><br><span class="line">    shade: <span class="number">0.8</span>,</span><br><span class="line">    area: [<span class="string">"380px"</span>, <span class="string">"90%"</span>],</span><br><span class="line">    <span class="comment">// iframe的url, 这里可以写本地地址，也可以写网络地址</span></span><br><span class="line">    <span class="comment">// content: "//huanggaofang.com/",</span></span><br><span class="line">    content: <span class="string">"../common/selectUser.html"</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><button class="btn btn-test" onclick="testBaseIframe()">弹出指定网页 Iframe</button></p><h2 id="LayDate-使用方法"><a href="#LayDate-使用方法" class="headerlink" title="LayDate 使用方法"></a>LayDate 使用方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">laydate.render(&#123;</span><br><span class="line">  <span class="comment">// 指定元素</span></span><br><span class="line">  elem: <span class="string">"#testBaseDate"</span>,</span><br><span class="line">  <span class="comment">// 日期格式</span></span><br><span class="line">  format: <span class="string">"yyyy年MM月dd日"</span>,</span><br><span class="line">  <span class="comment">// 默认值</span></span><br><span class="line">  value: <span class="string">"2018-08-18"</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><input class="input-control" id="testBaseDate" placeholder="请选择日期" /><!-- extra__start --><script src="https://cdn.bootcdn.net/ajax/libs/layui/2.6.4/layui.min.js"></script><script>  const layer = layui.layer;  function testBaseAlert() {    layer.alert('弹出基础Alert')  }  function testBackAlert() {    layer.alert("弹出回调Alert", function(index) {      console.log('弹出回调Alert', index)      layer.close(index);    });  }  function testDiyAlert() {    layer.alert("弹出自定义Alert", {      // 右上角关闭按钮的另外一种样式      closeBtn: 2,      cancel: function(index, layero){         // 点右上角关闭按钮时触发        if(confirm('确定要关闭么')){          // 只有当点击confirm框的确定时，该层才会关闭          layer.close(index)        }        return false;       }     });  }  function testBaseConfirm() {    layer.confirm(      "是否确认删除？",      {        btn: ["确认", "取消"], //按钮      },      function () {        layer.msg("删除成功");      },      function () {        layer.msg("取消删除");      }    );  }  function testBaseIframe() {    layer.open({      type: 2,      title: "指定iframe",      shadeClose: true,      shade: 0.8,      area: ["375px", "90%"],      // iframe的url, 这里可以写本地地址，也可以写网络地址      content: "//huanggaofang.com/",    });  }  const laydate = layui.laydate;  laydate.render({    // 指定元素    elem: '#testBaseDate',    // 日期格式    format: 'yyyy年MM月dd月',    // 默认值     value: '2021年08月18月'  });</script><!-- extra__end -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Layer.js 是基于 JQuery 的一款 UI 插件，是专用于 Web 的弹出层组件。&lt;/p&gt;
&lt;p&gt;官网地址：&lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="待填坑" scheme="https://huanggaofang.com/tags/%E5%BE%85%E5%A1%AB%E5%9D%91/"/>
    
      <category term="Javascript Lib" scheme="https://huanggaofang.com/tags/Javascript-Lib/"/>
    
      <category term="Layer" scheme="https://huanggaofang.com/tags/Layer/"/>
    
      <category term="jQuery Lib" scheme="https://huanggaofang.com/tags/jQuery-Lib/"/>
    
  </entry>
  
  <entry>
    <title>Moment.js 应用总结</title>
    <link href="https://huanggaofang.com/frontend/lib/moment.js/"/>
    <id>https://huanggaofang.com/frontend/lib/moment.js/</id>
    <published>2020-06-04T02:30:00.000Z</published>
    <updated>2021-07-21T07:09:08.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install moment</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> moment = <span class="built_in">require</span>(<span class="string">'moment'</span>)</span><br><span class="line">moment().format()</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"moment.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">  moment().format()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Typescript"><a href="#Typescript" class="headerlink" title="Typescript"></a>Typescript</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install moment</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> moment <span class="keyword">from</span> <span class="string">'moment'</span>;</span><br></pre></td></tr></table></figure><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><h3 id="格式化参数"><a href="#格式化参数" class="headerlink" title="格式化参数"></a>格式化参数</h3><p><strong>注意</strong>: 如星期等数据需要先设置本地化格式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置为中文格式</span></span><br><span class="line">moment.locale(<span class="string">'zh-cn'</span>);</span><br></pre></td></tr></table></figure><p><strong>注意</strong>: 格式化参数区分大小写。</p><p>例：2020-06-04 16:05:32:120 星期四 第二季度</p><table><thead><tr><th align="center">参数</th><th align="center">示例</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">YYYY</td><td align="center">2020</td><td align="center">4 或 2 位数字的年份</td></tr><tr><td align="center">YY</td><td align="center">20</td><td align="center">2 位数字的年份</td></tr><tr><td align="center">Y</td><td align="center">2020</td><td align="center">带有任意数字和符号的年份</td></tr><tr><td align="center">Q</td><td align="center">2</td><td align="center">年份的季度。将月份设置为季度的第一个月</td></tr><tr><td align="center">M</td><td align="center">6</td><td align="center">月份数字，不包含0</td></tr><tr><td align="center">MM</td><td align="center">06</td><td align="center">月份数字，包含0</td></tr><tr><td align="center">MMM</td><td align="center">Jun</td><td align="center">语言环境中的月份名称，由 <code>moment.locale()</code> 设置</td></tr><tr><td align="center">MMMM</td><td align="center">June</td><td align="center">语言环境中的月份名称，由 <code>moment.locale()</code> 设置</td></tr><tr><td align="center">D</td><td align="center">4</td><td align="center">月的某天，不包含0</td></tr><tr><td align="center">DD</td><td align="center">04</td><td align="center">月的某天，包含0</td></tr><tr><td align="center">Do</td><td align="center">4th</td><td align="center">月的某天，带序号</td></tr><tr><td align="center">DDD</td><td align="center">156</td><td align="center">年的某天，不包含0</td></tr><tr><td align="center">DDDD</td><td align="center">156</td><td align="center">年的某天，包含0</td></tr><tr><td align="center">X</td><td align="center">1591257932</td><td align="center">Unix 时间戳</td></tr><tr><td align="center">x</td><td align="center">1591257932000</td><td align="center">Unix 毫秒时间戳</td></tr><tr><td align="center">GGGG</td><td align="center">2020</td><td align="center">ISO 的 4 位数字的周年</td></tr><tr><td align="center">GG</td><td align="center">2020</td><td align="center">ISO 的 2 位数字的周年</td></tr><tr><td align="center">gggg</td><td align="center">2020</td><td align="center">语言环境的 4 位数字的周年</td></tr><tr><td align="center">gg</td><td align="center">20</td><td align="center">语言环境的 2 位数字的周年</td></tr><tr><td align="center">WW</td><td align="center">23</td><td align="center">ISO 的年的第几周</td></tr><tr><td align="center">W</td><td align="center">23</td><td align="center">ISO 的年的第几周</td></tr><tr><td align="center">w</td><td align="center">23</td><td align="center">语言环境的年的第几周，不包含0</td></tr><tr><td align="center">ww</td><td align="center">23</td><td align="center">语言环境的年的第几周，包含0</td></tr><tr><td align="center">E</td><td align="center">4</td><td align="center">ISO 的星期几</td></tr><tr><td align="center">e</td><td align="center">3</td><td align="center">语言环境的星期几</td></tr><tr><td align="center">ddd</td><td align="center">周四</td><td align="center">语言环境的星期几的名称，由 <code>moment.locale()</code> 设置</td></tr><tr><td align="center">dddd</td><td align="center">星期四</td><td align="center">语言环境的星期几的名称，由 <code>moment.locale()</code> 设置</td></tr><tr><td align="center">l</td><td align="center">2020/6/4</td><td align="center">语言环境的日期（以本地格式）</td></tr><tr><td align="center">ll</td><td align="center">2020年6月4日</td><td align="center">语言环境的月份名称、月份日期、年份</td></tr><tr><td align="center">lll</td><td align="center">2020年6月4日 16:05</td><td align="center">语言环境的月份名称、月份日期、年份、时间</td></tr><tr><td align="center">L</td><td align="center">2020/06/04</td><td align="center">语言环境的日期（以本地格式）</td></tr><tr><td align="center">LL</td><td align="center">2020年6月4日</td><td align="center">语言环境的月份名称、月份日期、年份</td></tr><tr><td align="center">LLL</td><td align="center">2020年6月4日下午4点05分</td><td align="center">语言环境的月份名称、月份日期、年份、时间</td></tr><tr><td align="center">LLLL</td><td align="center">2020年6月4日星期四下午4点05分</td><td align="center">语言环境的星期几、月份名称、月份日期、年份、时间</td></tr><tr><td align="center">LT</td><td align="center">16:05</td><td align="center">语言环境的时间（不含秒钟）</td></tr><tr><td align="center">LTS</td><td align="center">16:05:32</td><td align="center">语言环境的时间（含秒钟）</td></tr><tr><td align="center">H</td><td align="center">16</td><td align="center">小时（24 小时制），不包含0</td></tr><tr><td align="center">HH</td><td align="center">16</td><td align="center">小时（24 小时制），包含0</td></tr><tr><td align="center">h</td><td align="center">4</td><td align="center">小时（12 小时制, 0 ~ 23），不包含0</td></tr><tr><td align="center">hh</td><td align="center">04</td><td align="center">小时（12 小时制, 0 ~ 23），包含0</td></tr><tr><td align="center">k</td><td align="center">16</td><td align="center">小时（24 小时制, 1 ~ 24），不包含0</td></tr><tr><td align="center">kk</td><td align="center">16</td><td align="center">小时（24 小时制, 1 ~ 24），包含0</td></tr><tr><td align="center">a</td><td align="center">下午</td><td align="center">上午或下午</td></tr><tr><td align="center">A</td><td align="center">下午</td><td align="center">上午或下午</td></tr><tr><td align="center">m</td><td align="center">5</td><td align="center">分钟，不包含0</td></tr><tr><td align="center">mm</td><td align="center">05</td><td align="center">分钟，包含0</td></tr><tr><td align="center">s</td><td align="center">32</td><td align="center">秒钟，不包含0</td></tr><tr><td align="center">ss</td><td align="center">32</td><td align="center">秒钟，包含0</td></tr><tr><td align="center">S</td><td align="center">1</td><td align="center">带分数的秒钟(0~999), 即 100 毫秒 = 0.1 秒</td></tr><tr><td align="center">SS</td><td align="center">12</td><td align="center">带分数的秒钟(0~999), 即 120 毫秒 = 0.12 秒</td></tr><tr><td align="center">SSS</td><td align="center">120</td><td align="center">带分数的秒钟(0~999), 即 120 毫秒 = 0.12 秒</td></tr><tr><td align="center">Z</td><td align="center">+08:00</td><td align="center">从 UTC 偏移为 +-HH:mm、+-HHmm 或 Z</td></tr><tr><td align="center">ZZ</td><td align="center">+0800</td><td align="center">从 UTC 偏移为 +-HH:mm、+-HHmm 或 Z</td></tr></tbody></table><h3 id="格式化案例"><a href="#格式化案例" class="headerlink" title="格式化案例"></a>格式化案例</h3><ol><li><p>当前时间格式化为年月日，YYYY-MM-DD， 如 2020-06-04</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">moment().format(<span class="string">'YYYY-MM-DD'</span>)</span><br></pre></td></tr></table></figure></li><li><p>年月日时分秒，YYYY-MM-DD HH:mm:ss</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">moment().format(<span class="string">'YYYY-MM-DD HH:mm:ss'</span>)</span><br></pre></td></tr></table></figure></li><li><p>年月日星期，YYYY-MM-DD dddd</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">moment.locale(<span class="string">'zh-cn'</span>)</span><br><span class="line">moment().format(<span class="string">'YYYY-MM-DD dddd'</span>)</span><br></pre></td></tr></table></figure></li><li><p>返回一个包含年月日时分秒毫秒的对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> timeObj = moment().toObject()</span><br><span class="line"><span class="built_in">console</span>.log(timeObj)</span><br></pre></td></tr></table></figure></li></ol><h2 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h2><h3 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h3><p>这里默认调取的是本地时间，不传参数即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// moment() = moment(new Date())</span></span><br><span class="line">moment()</span><br></pre></td></tr></table></figure><h3 id="获取指定的某天"><a href="#获取指定的某天" class="headerlink" title="获取指定的某天"></a>获取指定的某天</h3><ol><li><p>本周的第一天</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> weekFirstDay = moment().startOf(<span class="string">'week'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'本周的第一天'</span>, weekFirstDay.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li><li><p>本周的最后一天</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> weekLastDay = moment().endOf(<span class="string">'week'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'本周的最后一天'</span>, weekLastDay.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li><li><p>本月的第一天</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> monthFirstDay = moment().startOf(<span class="string">'week'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'本周的第一天'</span>, weekFirstDay.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li><li><p>本月的最后一天</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> monthLastDay = moment().endOf(<span class="string">'month'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'本月的最后一天'</span>, monthLastDay.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li><li><p>上个月的第一天</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> prevMonthFirstDay = moment().subtract(<span class="number">1</span>, <span class="string">'months'</span>).startOf(<span class="string">'month'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'上个月的第一天'</span>, prevMonthFirstDay.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li><li><p>下个月的最后一天</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nextMonthLastDay = moment().add(<span class="number">1</span>, <span class="string">'months'</span>).endOf(<span class="string">'month'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'下个月的最后一天'</span>, nextMonthLastDay.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li><li><p>某年某月的第一天</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> someDayFirstDay = moment(<span class="string">'2016-09-12'</span>).startOf(<span class="string">'month'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'某年某月月的第一天'</span>, someDayFirstDay.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li><li><p>某年某月的最后一天</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> someDayLastDay = moment(<span class="string">'2016-09-12'</span>).endOf(<span class="string">'month'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'某年某月月的最后一天'</span>, someDayLastDay.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li><li><p>7天前的日期</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> DaysBefore7 = moment().subtract(<span class="number">7</span>, <span class="string">'days'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'7天前'</span>, DaysBefore7.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li><li><p>30天后的日期</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> DaysAfter30 = moment().add(<span class="number">30</span>, <span class="string">'days'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'30天后'</span>, DaysAfter30.format(<span class="string">'YYYY-MM-DD'</span>))</span><br></pre></td></tr></table></figure></li></ol><h3 id="获取时间间距"><a href="#获取时间间距" class="headerlink" title="获取时间间距"></a>获取时间间距</h3><ol><li><p>某天距离当前相隔时间</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="string">'2020-06-04 16:05:32'</span></span><br><span class="line"><span class="comment">// 当前时间为 2020-06-05 09:42</span></span><br><span class="line"><span class="built_in">console</span>.log(moment(date).fromNow()) <span class="comment">// 18 小时前</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="string">'2019-06-06 06:05:32'</span></span><br><span class="line"><span class="comment">// 当前时间为 2020-06-05 09:42</span></span><br><span class="line"><span class="built_in">console</span>.log(moment(date).fromNow()) <span class="comment">// 1 年前</span></span><br><span class="line"><span class="built_in">console</span>.log(moment(date).fromNow(<span class="literal">true</span>)) <span class="comment">// 1 年</span></span><br></pre></td></tr></table></figure></li><li><p>日期A与日期B相隔天数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dateA = <span class="string">'2020-06-04 16:05:32'</span></span><br><span class="line"><span class="keyword">var</span> dateB = <span class="string">'2019-06-06 06:05:32'</span></span><br><span class="line"><span class="keyword">var</span> a = moment(dateA)</span><br><span class="line"><span class="keyword">var</span> b = moment(dateB)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'时间A距离时间B的间隔'</span>, a.from(b)) <span class="comment">// 1 年后</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'时间A距离时间B的间隔'</span>, a.from(b, <span class="literal">true</span>)) <span class="comment">// 1 年</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><ol><li><p>时间A是否在时间B之前</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a1 = <span class="string">'2019-06-05'</span></span><br><span class="line"><span class="keyword">var</span> b1 = <span class="string">'2020/02/09'</span></span><br><span class="line"><span class="built_in">console</span>.log(moment(a1).isBefore(b1))</span><br></pre></td></tr></table></figure></li><li><p>时间A是和时间B是同一年</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a2 = <span class="string">'2020-06-05'</span></span><br><span class="line"><span class="keyword">var</span> b2 = <span class="string">'2020/02/09'</span></span><br><span class="line"><span class="built_in">console</span>.log(moment(a1).isSame(b1, <span class="string">'year'</span>))</span><br></pre></td></tr></table></figure></li><li><p>查询变量是否为moment对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a3 = moment(<span class="string">'2015-05-15'</span>)</span><br><span class="line"><span class="keyword">var</span> b3 = <span class="string">'2015-05-15'</span></span><br><span class="line"><span class="built_in">console</span>.log(moment.isMoment(a3), moment.isMoment(b3))</span><br></pre></td></tr></table></figure></li><li><p>查询变量是否为原生 js Date 对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a4 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2015-05-15'</span>)</span><br><span class="line"><span class="keyword">var</span> b4 = <span class="string">'2015-05-15'</span></span><br><span class="line"><span class="built_in">console</span>.log(moment.isDate(a4), moment.isDate(b4))</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>参考资料：</p></blockquote><ol><li><p>Github: <a href="https://github.com/moment/moment" target="_blank" rel="noopener">Moment</a></p></li><li><p><a href="http://momentjs.cn/" target="_blank" rel="noopener">Moment中文网</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装使用&quot;&gt;&lt;a href=&quot;#安装使用&quot; class=&quot;headerlink&quot; title=&quot;安装使用&quot;&gt;&lt;/a&gt;安装使用&lt;/h2&gt;&lt;h3 id=&quot;Node-js&quot;&gt;&lt;a href=&quot;#Node-js&quot; class=&quot;headerlink&quot; title=&quot;Node.js&quot;&gt;&lt;/a&gt;Node.js&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install moment&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; moment = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;moment&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;moment().format()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Javascript" scheme="https://huanggaofang.com/tags/Javascript/"/>
    
      <category term="Javascript Lib" scheme="https://huanggaofang.com/tags/Javascript-Lib/"/>
    
      <category term="时间处理" scheme="https://huanggaofang.com/tags/%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86/"/>
    
      <category term="Moment.js" scheme="https://huanggaofang.com/tags/Moment-js/"/>
    
  </entry>
  
  <entry>
    <title>Javascript 基础</title>
    <link href="https://huanggaofang.com/frontend/js/javascript/"/>
    <id>https://huanggaofang.com/frontend/js/javascript/</id>
    <published>2020-06-04T01:40:00.000Z</published>
    <updated>2021-07-21T07:48:11.176Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运算处理"><a href="#运算处理" class="headerlink" title="运算处理"></a>运算处理</h2><h3 id="数学计算"><a href="#数学计算" class="headerlink" title="数学计算"></a>数学计算</h3><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><h3 id="时间处理"><a href="#时间处理" class="headerlink" title="时间处理"></a>时间处理</h3><h2 id="操作Dom"><a href="#操作Dom" class="headerlink" title="操作Dom"></a>操作Dom</h2><h2 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h2><a id="more"></a><h2 id="优化方法"><a href="#优化方法" class="headerlink" title="优化方法"></a>优化方法</h2><h3 id="使用-void-0-代替-undefined"><a href="#使用-void-0-代替-undefined" class="headerlink" title="使用 void 0 代替 undefined"></a>使用 <code>void 0</code> 代替 <code>undefined</code></h3><p>这样做的优点：</p><ol><li><p>避免某些情况下 <code>undefined</code> 被重写：局部作用域 或 低版本IE等情况。</p></li><li><p><code>void 0</code> 能减少字节</p></li></ol><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1-逻辑运算符-amp-amp-、-和-位运算符-amp-、"><a href="#1-逻辑运算符-amp-amp-、-和-位运算符-amp-、" class="headerlink" title="1. 逻辑运算符 &amp;&amp;、|| 和 位运算符 &amp;、|"></a>1. 逻辑运算符 &amp;&amp;、|| 和 位运算符 &amp;、|</h3><p>逻辑运算符：</p><p><code>||</code>（或者）:</p><p>只要<code>||</code>前面为 false，不管<code>||</code>后面是 true 还是 false，都返回<code>||</code>后面的值。<br>只要<code>||</code>前面为 true，不管<code>||</code>后面是 true 还是 false，都返回<code>||</code>前面的值。</p><p>即：真前假后</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">6</span></span><br><span class="line"><span class="built_in">console</span>.log(a || b) <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = <span class="number">0</span></span><br><span class="line"><span class="keyword">var</span> d = <span class="number">6</span></span><br><span class="line"><span class="built_in">console</span>.log(c || d) <span class="comment">// 6</span></span><br></pre></td></tr></table></figure><p><code>&amp;&amp;</code>（并且）:</p><p>只要<code>&amp;&amp;</code>前面是 false，无论<code>&amp;&amp;</code>后面是 true 还是 false，结果都将返<code>&amp;&amp;</code>前面的值。<br>只要<code>&amp;&amp;</code>前面是 true，无论<code>&amp;&amp;</code>后面是 true 还是 false，结果都将返<code>&amp;&amp;</code>后面的值。</p><p>即：假前真后</p><p>位运算符:</p><blockquote><p>位运算就是直接对整数在内存中的二进制位进行操作。二进制的最末位为 0 表示该数为偶数，最末位为 1 表示该数为奇数。</p></blockquote><p><code>|</code>（或者）:</p><p>两个位只要有一个为 1，那么结果都为 1。否则就为 0。</p><p>即：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">31</span> | <span class="number">2</span>) <span class="comment">// 31</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'31的二进制为'</span>, (<span class="number">31</span>).toString(<span class="number">2</span>)) <span class="comment">// 11111</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'2的二进制为'</span>, (<span class="number">2</span>).toString(<span class="number">2</span>)) <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><p><code>&amp;</code>（并且）:</p><p>两个数值的个位分别相与，同时为 1 才得 1，只要一个为 0 就为 0。</p><p>即：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">31</span> &amp; <span class="number">2</span>) <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'31的二进制为'</span>, (<span class="number">31</span>).toString(<span class="number">2</span>)) <span class="comment">// 11111</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'2的二进制为'</span>, (<span class="number">2</span>).toString(<span class="number">2</span>)) <span class="comment">// 10</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;运算处理&quot;&gt;&lt;a href=&quot;#运算处理&quot; class=&quot;headerlink&quot; title=&quot;运算处理&quot;&gt;&lt;/a&gt;运算处理&lt;/h2&gt;&lt;h3 id=&quot;数学计算&quot;&gt;&lt;a href=&quot;#数学计算&quot; class=&quot;headerlink&quot; title=&quot;数学计算&quot;&gt;&lt;/a&gt;数学计算&lt;/h3&gt;&lt;h3 id=&quot;进制转换&quot;&gt;&lt;a href=&quot;#进制转换&quot; class=&quot;headerlink&quot; title=&quot;进制转换&quot;&gt;&lt;/a&gt;进制转换&lt;/h3&gt;&lt;h3 id=&quot;时间处理&quot;&gt;&lt;a href=&quot;#时间处理&quot; class=&quot;headerlink&quot; title=&quot;时间处理&quot;&gt;&lt;/a&gt;时间处理&lt;/h3&gt;&lt;h2 id=&quot;操作Dom&quot;&gt;&lt;a href=&quot;#操作Dom&quot; class=&quot;headerlink&quot; title=&quot;操作Dom&quot;&gt;&lt;/a&gt;操作Dom&lt;/h2&gt;&lt;h2 id=&quot;HTTP请求&quot;&gt;&lt;a href=&quot;#HTTP请求&quot; class=&quot;headerlink&quot; title=&quot;HTTP请求&quot;&gt;&lt;/a&gt;HTTP请求&lt;/h2&gt;
    
    </summary>
    
    
      <category term="前端开发笔记" scheme="https://huanggaofang.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="待填坑" scheme="https://huanggaofang.com/tags/%E5%BE%85%E5%A1%AB%E5%9D%91/"/>
    
      <category term="Javascript" scheme="https://huanggaofang.com/tags/Javascript/"/>
    
  </entry>
  
</feed>
